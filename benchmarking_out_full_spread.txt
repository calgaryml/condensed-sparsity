/home/user/condensed-sparsity/src/condensed_sparsity/v2/condensed_linear.py:68: UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at ../aten/src/ATen/SparseCsrTensorImpl.cpp:54.)
  torch.clone(self.weight.detach().type(dtype).to_sparse_csr()),
/home/user/build/.venv/lib/python3.10/site-packages/torch/jit/_script.py:1241: UserWarning: `optimize` is deprecated and has no effect. Use `with torch.jit.optimized_execution() instead
  warnings.warn(
Benchmarking batch size 1024 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 1 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1160358.3        [0m[0m  |  [31m[1m               735191.3              [0m[0m  |  [31m[1m                          1851532.6                          [0m[0m  |  [31m[1m                  2848520.4                  [0m[0m  |  [31m[1m       1948915.5       [0m[0m
      512    x 768   |  [31m[1m        568400.4        [0m[0m  |  [31m[1m               361494.0              [0m[0m  |  [31m[1m                           870410.5                          [0m[0m  |  [31m[1m                  1407153.9                  [0m[0m  |  [31m[1m       1000446.3       [0m[0m
      256    x 768   |  [31m[1m        295522.2        [0m[0m  |  [31m[1m               181285.8              [0m[0m  |  [31m[1m                           447874.2                          [0m[0m  |  [31m[1m                   708148.6                  [0m[0m  |  [31m[1m        520886.9       [0m[0m
      128    x 768   |  [31m[1m        144998.9        [0m[0m  |  [31m[1m                90046.0              [0m[0m  |  [31m[1m                           221571.6                          [0m[0m  |  [31m[1m                   357117.5                  [0m[0m  |  [31m[1m        242908.8       [0m[0m
      64     x 768   |  [31m[1m         72945.1        [0m[0m  |  [31m[1m                45105.3              [0m[0m  |  [31m[1m                            75472.4                          [0m[0m  |  [31m[1m                   178013.4                  [0m[0m  |  [31m[1m        120385.9       [0m[0m
      32     x 768   |  [31m[1m         36217.5        [0m[0m  |  [31m[1m                22291.9              [0m[0m  |  [31m[1m                            34413.2                          [0m[0m  |  [31m[1m                    88759.3                  [0m[0m  |  [31m[1m         60162.5       [0m[0m
      16     x 768   |  [31m[1m         17807.7        [0m[0m  |  [31m[1m                11252.8              [0m[0m  |  [31m[1m                            16693.8                          [0m[0m  |  [31m[1m                    44285.4                  [0m[0m  |  [31m[1m         30011.8       [0m[0m
      8      x 768   |  [31m[1m          8843.1        [0m[0m  |  [31m[1m                 5641.2              [0m[0m  |  [31m[1m                             8343.8                          [0m[0m  |  [31m[1m                    21885.1                  [0m[0m  |  [31m[1m         14899.7       [0m[0m
      4      x 768   |  [2m[91m          4413.0        [0m[0m  |  [2m[91m                 2839.0              [0m[0m  |  [2m[91m                             4243.8                          [0m[0m  |  [2m[91m                    11495.5                  [0m[0m  |  [2m[91m          7543.0       [0m[0m
      2      x 768   |            2244.6          |                   1423.7                |                               2209.2                            |  [2m[91m                     5840.0                  [0m[0m  |  [2m[91m          3872.4       [0m[0m
      1      x 768   |  [92m[1m          1173.2        [0m[0m  |  [92m[1m                  754.5              [0m[0m  |  [92m[1m                             1167.9                          [0m[0m  |  [92m[1m                     2806.3                  [0m[0m  |  [92m[1m          1916.4       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1138513.0        [0m[0m  |  [31m[1m               778627.5              [0m[0m  |  [31m[1m                          3407638.0                          [0m[0m  |  [31m[1m                  2823790.8                  [0m[0m  |  [31m[1m       1979145.3       [0m[0m
      512    x 768   |  [31m[1m        560962.0        [0m[0m  |  [31m[1m               384826.8              [0m[0m  |  [31m[1m                          1680858.4                          [0m[0m  |  [31m[1m                  1428558.7                  [0m[0m  |  [31m[1m        975161.8       [0m[0m
      256    x 768   |  [31m[1m        282967.8        [0m[0m  |  [31m[1m               194568.5              [0m[0m  |  [31m[1m                           826930.7                          [0m[0m  |  [31m[1m                   710507.2                  [0m[0m  |  [31m[1m        484433.1       [0m[0m
      128    x 768   |  [31m[1m        140207.3        [0m[0m  |  [31m[1m                98232.2              [0m[0m  |  [31m[1m                           415136.4                          [0m[0m  |  [31m[1m                   354521.5                  [0m[0m  |  [31m[1m        240737.8       [0m[0m
      64     x 768   |  [31m[1m         69989.6        [0m[0m  |  [31m[1m                47728.8              [0m[0m  |  [31m[1m                           210301.7                          [0m[0m  |  [31m[1m                   177887.1                  [0m[0m  |  [31m[1m        119381.9       [0m[0m
      32     x 768   |  [31m[1m         34731.1        [0m[0m  |  [31m[1m                23869.1              [0m[0m  |  [31m[1m                            71066.6                          [0m[0m  |  [31m[1m                    87823.5                  [0m[0m  |  [31m[1m         60292.2       [0m[0m
      16     x 768   |  [31m[1m         17138.2        [0m[0m  |  [31m[1m                11895.9              [0m[0m  |  [31m[1m                            33511.0                          [0m[0m  |  [31m[1m                    44063.9                  [0m[0m  |  [31m[1m         29868.8       [0m[0m
      8      x 768   |  [31m[1m          8562.0        [0m[0m  |  [31m[1m                 5972.6              [0m[0m  |  [31m[1m                            16328.8                          [0m[0m  |  [31m[1m                    21959.8                  [0m[0m  |  [31m[1m         15014.1       [0m[0m
      4      x 768   |  [2m[91m          4342.7        [0m[0m  |  [2m[91m                 3046.0              [0m[0m  |  [2m[91m                             8249.6                          [0m[0m  |  [2m[91m                    11158.6                  [0m[0m  |  [2m[91m          7539.1       [0m[0m
      2      x 768   |            2206.0          |                   1536.4                |                               4218.7                            |                       5606.3                    |            3776.4       
      1      x 768   |  [92m[1m          1115.3        [0m[0m  |  [92m[1m                  785.1              [0m[0m  |  [92m[1m                             2128.8                          [0m[0m  |  [92m[1m                     2871.3                  [0m[0m  |  [92m[1m          1895.5       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 1 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 1 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            57.9            |                   54.4                  |  [31m[1m                            3550.1                           [0m[0m  |  [2m[91m                    112.9                    [0m[0m  |  [2m[91m         114.4         [0m[0m
      512    x 768   |            57.0            |                   53.3                  |  [31m[1m                            1808.2                           [0m[0m  |                       68.3                      |            58.5         
      256    x 768   |            56.9            |                   54.2                  |  [31m[1m                             927.2                           [0m[0m  |  [34m[1m                     50.0                    [0m[0m  |  [34m[1m          50.7         [0m[0m
      128    x 768   |            55.5            |                   54.0                  |  [2m[91m                             482.4                           [0m[0m  |  [92m[1m                     49.4                    [0m[0m  |  [92m[1m          50.3         [0m[0m
      64     x 768   |            55.9            |                   52.5                  |  [2m[91m                             262.1                           [0m[0m  |  [92m[1m                     49.4                    [0m[0m  |  [92m[1m          50.2         [0m[0m
      32     x 768   |            56.7            |                   55.1                  |                               155.8                             |  [34m[1m                     50.1                    [0m[0m  |  [92m[1m          50.5         [0m[0m
      16     x 768   |  [34m[1m          50.9          [0m[0m  |                   53.0                  |  [92m[1m                             113.1                           [0m[0m  |  [34m[1m                     50.8                    [0m[0m  |  [34m[1m          54.5         [0m[0m
      8      x 768   |  [34m[1m          50.7          [0m[0m  |                   53.6                  |  [92m[1m                             112.9                           [0m[0m  |  [34m[1m                     50.6                    [0m[0m  |  [34m[1m          54.6         [0m[0m
      4      x 768   |            53.0            |                   50.9                  |  [34m[1m                             113.4                           [0m[0m  |  [34m[1m                     50.2                    [0m[0m  |  [34m[1m          54.3         [0m[0m
      2      x 768   |  [34m[1m          49.5          [0m[0m  |  [92m[1m                 40.9                [0m[0m  |  [92m[1m                             112.4                           [0m[0m  |  [34m[1m                     50.9                    [0m[0m  |  [34m[1m          54.5         [0m[0m
      1      x 768   |  [92m[1m          48.0          [0m[0m  |  [92m[1m                 41.3                [0m[0m  |  [92m[1m                             112.1                           [0m[0m  |  [34m[1m                     50.9                    [0m[0m  |            55.5         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m          49.6          [0m[0m  |                   49.3                  |  [31m[1m                            8326.1                           [0m[0m  |  [2m[91m                    114.5                    [0m[0m  |  [2m[91m         116.3         [0m[0m
      512    x 768   |  [92m[1m          47.6          [0m[0m  |                   50.3                  |  [31m[1m                            4186.6                           [0m[0m  |                       69.1                      |            59.2         
      256    x 768   |  [34m[1m          50.6          [0m[0m  |                   50.4                  |  [31m[1m                            2109.1                           [0m[0m  |  [92m[1m                     48.7                    [0m[0m  |  [92m[1m          49.3         [0m[0m
      128    x 768   |  [34m[1m          52.2          [0m[0m  |                   51.0                  |  [31m[1m                            1078.3                           [0m[0m  |  [34m[1m                     49.6                    [0m[0m  |  [92m[1m          49.7         [0m[0m
      64     x 768   |  [34m[1m          51.4          [0m[0m  |                   51.0                  |  [2m[91m                             558.1                           [0m[0m  |  [92m[1m                     49.0                    [0m[0m  |  [34m[1m          50.4         [0m[0m
      32     x 768   |            57.6            |                   50.8                  |  [2m[91m                             300.5                           [0m[0m  |  [34m[1m                     53.5                    [0m[0m  |  [34m[1m          50.3         [0m[0m
      16     x 768   |            55.8            |                   54.3                  |                               176.6                             |  [34m[1m                     50.6                    [0m[0m  |  [34m[1m          54.0         [0m[0m
      8      x 768   |            62.6            |                   57.1                  |  [34m[1m                             121.1                           [0m[0m  |  [34m[1m                     53.1                    [0m[0m  |            57.8         
      4      x 768   |            59.7            |                   59.6                  |  [92m[1m                             118.1                           [0m[0m  |                       53.9                      |            57.3         
      2      x 768   |            54.7            |  [34m[1m                 44.7                [0m[0m  |  [34m[1m                             119.5                           [0m[0m  |  [34m[1m                     52.9                    [0m[0m  |            58.0         
      1      x 768   |  [34m[1m          50.1          [0m[0m  |  [92m[1m                 43.9                [0m[0m  |  [92m[1m                             117.7                           [0m[0m  |  [34m[1m                     50.7                    [0m[0m  |            57.5         

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        730527.9        [0m[0m  |  [31m[1m               726889.1              [0m[0m  |  [31m[1m                          1637859.7                          [0m[0m  |  [31m[1m                  1969846.0                  [0m[0m  |  [31m[1m       1972427.4       [0m[0m
      512    x 768   |  [31m[1m        369920.0        [0m[0m  |  [31m[1m               368456.2              [0m[0m  |  [31m[1m                           830633.7                          [0m[0m  |  [31m[1m                   977288.3                  [0m[0m  |  [31m[1m        980154.1       [0m[0m
      256    x 768   |  [31m[1m        181174.0        [0m[0m  |  [31m[1m               181622.0              [0m[0m  |  [31m[1m                           418768.4                          [0m[0m  |  [31m[1m                   487481.7                  [0m[0m  |  [31m[1m        489985.2       [0m[0m
      128    x 768   |  [31m[1m         89433.5        [0m[0m  |  [31m[1m                89396.5              [0m[0m  |  [31m[1m                           210272.3                          [0m[0m  |  [31m[1m                   261799.8                  [0m[0m  |  [31m[1m        243448.2       [0m[0m
      64     x 768   |  [31m[1m         44736.3        [0m[0m  |  [31m[1m                44501.4              [0m[0m  |  [31m[1m                            86152.2                          [0m[0m  |  [31m[1m                   118710.3                  [0m[0m  |  [31m[1m        121439.4       [0m[0m
      32     x 768   |  [31m[1m         22219.8        [0m[0m  |  [31m[1m                22146.3              [0m[0m  |  [31m[1m                            33676.5                          [0m[0m  |  [31m[1m                    59926.0                  [0m[0m  |  [31m[1m         59933.6       [0m[0m
      16     x 768   |  [31m[1m         11308.4        [0m[0m  |  [31m[1m                11148.5              [0m[0m  |  [31m[1m                            16717.1                          [0m[0m  |  [31m[1m                    29989.5                  [0m[0m  |  [31m[1m         29836.6       [0m[0m
      8      x 768   |  [31m[1m          5755.9        [0m[0m  |  [31m[1m                 5735.4              [0m[0m  |  [31m[1m                             8426.8                          [0m[0m  |  [31m[1m                    15012.6                  [0m[0m  |  [31m[1m         15122.4       [0m[0m
      4      x 768   |  [2m[91m          2861.6        [0m[0m  |  [2m[91m                 2821.3              [0m[0m  |  [2m[91m                             4181.3                          [0m[0m  |  [2m[91m                     7572.7                  [0m[0m  |  [2m[91m          7577.8       [0m[0m
      2      x 768   |            1431.8          |                   1409.3                |                               2177.7                            |                       3788.5                    |            3774.9       
      1      x 768   |  [92m[1m           741.4        [0m[0m  |  [92m[1m                  730.7              [0m[0m  |  [92m[1m                             1118.6                          [0m[0m  |  [92m[1m                     1932.7                  [0m[0m  |  [92m[1m          1906.3       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        774492.4        [0m[0m  |  [31m[1m               771958.7              [0m[0m  |  [31m[1m                          3453192.9                          [0m[0m  |  [31m[1m                  1956569.0                  [0m[0m  |  [31m[1m       1944186.6       [0m[0m
      512    x 768   |  [31m[1m        388801.4        [0m[0m  |  [31m[1m               386864.3              [0m[0m  |  [31m[1m                          1630337.2                          [0m[0m  |  [31m[1m                  1011516.0                  [0m[0m  |  [31m[1m        980921.1       [0m[0m
      256    x 768   |  [31m[1m        192376.3        [0m[0m  |  [31m[1m               195285.4              [0m[0m  |  [31m[1m                           816864.1                          [0m[0m  |  [31m[1m                   487077.7                  [0m[0m  |  [31m[1m        486064.9       [0m[0m
      128    x 768   |  [31m[1m         95587.9        [0m[0m  |  [31m[1m                95398.4              [0m[0m  |  [31m[1m                           413024.8                          [0m[0m  |  [31m[1m                   241515.5                  [0m[0m  |  [31m[1m        242868.4       [0m[0m
      64     x 768   |  [31m[1m         48725.4        [0m[0m  |  [31m[1m                47896.7              [0m[0m  |  [31m[1m                           213502.3                          [0m[0m  |  [31m[1m                   120193.2                  [0m[0m  |  [31m[1m        127877.3       [0m[0m
      32     x 768   |  [31m[1m         23726.2        [0m[0m  |  [31m[1m                23805.5              [0m[0m  |  [31m[1m                            70227.8                          [0m[0m  |  [31m[1m                    60133.1                  [0m[0m  |  [31m[1m         60045.9       [0m[0m
      16     x 768   |  [31m[1m         11920.3        [0m[0m  |  [31m[1m                11913.4              [0m[0m  |  [31m[1m                            33252.5                          [0m[0m  |  [31m[1m                    29990.1                  [0m[0m  |  [31m[1m         29870.8       [0m[0m
      8      x 768   |  [31m[1m          6541.9        [0m[0m  |  [31m[1m                 6067.7              [0m[0m  |  [31m[1m                            16293.4                          [0m[0m  |  [31m[1m                    14911.3                  [0m[0m  |  [31m[1m         14859.1       [0m[0m
      4      x 768   |  [2m[91m          3006.2        [0m[0m  |  [2m[91m                 3022.9              [0m[0m  |  [2m[91m                             8264.6                          [0m[0m  |  [2m[91m                     7588.5                  [0m[0m  |  [2m[91m          7545.4       [0m[0m
      2      x 768   |            1515.5          |                   1508.5                |                               4159.1                            |                       3774.8                    |            3766.6       
      1      x 768   |  [92m[1m           788.7        [0m[0m  |  [92m[1m                  778.4              [0m[0m  |  [92m[1m                             2094.6                          [0m[0m  |  [92m[1m                     1937.7                  [0m[0m  |  [92m[1m          1896.5       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 1 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            72.0            |                   58.2                  |  [31m[1m                            3573.4                           [0m[0m  |                      114.7                      |  [2m[91m         114.4         [0m[0m
      512    x 768   |            71.6            |                   58.3                  |  [31m[1m                            1812.4                           [0m[0m  |  [34m[1m                     70.6                    [0m[0m  |            58.7         
      256    x 768   |            71.9            |                   58.5                  |  [31m[1m                             903.2                           [0m[0m  |  [34m[1m                     67.8                    [0m[0m  |  [92m[1m          53.3         [0m[0m
      128    x 768   |            71.6            |                   57.8                  |  [2m[91m                             458.2                           [0m[0m  |  [92m[1m                     66.9                    [0m[0m  |  [92m[1m          53.0         [0m[0m
      64     x 768   |            70.8            |                   56.0                  |  [2m[91m                             229.9                           [0m[0m  |  [34m[1m                     69.6                    [0m[0m  |  [34m[1m          54.3         [0m[0m
      32     x 768   |            72.8            |                   57.1                  |                               120.9                             |  [34m[1m                     67.9                    [0m[0m  |  [34m[1m          54.3         [0m[0m
      16     x 768   |            71.5            |                   57.3                  |  [34m[1m                              97.0                           [0m[0m  |  [34m[1m                     72.2                    [0m[0m  |  [34m[1m          58.1         [0m[0m
      8      x 768   |            71.4            |                   57.5                  |  [34m[1m                              96.3                           [0m[0m  |  [34m[1m                     72.9                    [0m[0m  |  [34m[1m          58.2         [0m[0m
      4      x 768   |            70.2            |                   54.7                  |  [34m[1m                              96.2                           [0m[0m  |  [34m[1m                     73.2                    [0m[0m  |            58.9         
      2      x 768   |  [92m[1m          58.0          [0m[0m  |  [92m[1m                 43.0                [0m[0m  |  [34m[1m                              96.6                           [0m[0m  |  [34m[1m                     72.7                    [0m[0m  |  [34m[1m          57.7         [0m[0m
      1      x 768   |  [92m[1m          58.4          [0m[0m  |  [34m[1m                 43.5                [0m[0m  |  [92m[1m                              95.0                           [0m[0m  |                       74.4                      |  [34m[1m          58.0         [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            67.1            |                   52.5                  |  [31m[1m                            8392.1                           [0m[0m  |                      115.9                      |  [2m[91m         116.6         [0m[0m
      512    x 768   |            68.0            |                   53.7                  |  [31m[1m                            4193.0                           [0m[0m  |  [34m[1m                     72.6                    [0m[0m  |            59.4         
      256    x 768   |            68.6            |                   55.0                  |  [31m[1m                            2095.2                           [0m[0m  |  [92m[1m                     67.2                    [0m[0m  |  [92m[1m          53.5         [0m[0m
      128    x 768   |            68.6            |                   54.7                  |  [31m[1m                            1060.7                           [0m[0m  |  [34m[1m                     68.2                    [0m[0m  |  [34m[1m          54.9         [0m[0m
      64     x 768   |            69.9            |                   54.4                  |  [31m[1m                             535.4                           [0m[0m  |  [34m[1m                     68.7                    [0m[0m  |  [34m[1m          54.6         [0m[0m
      32     x 768   |            69.6            |                   54.1                  |  [2m[91m                             270.2                           [0m[0m  |  [34m[1m                     68.4                    [0m[0m  |  [34m[1m          54.1         [0m[0m
      16     x 768   |            72.6            |                   58.3                  |                               141.2                             |  [34m[1m                     71.8                    [0m[0m  |  [34m[1m          58.3         [0m[0m
      8      x 768   |            73.1            |                   58.2                  |  [34m[1m                              96.7                           [0m[0m  |  [34m[1m                     72.6                    [0m[0m  |  [34m[1m          58.2         [0m[0m
      4      x 768   |            74.2            |                   59.1                  |  [92m[1m                              95.7                           [0m[0m  |  [34m[1m                     72.7                    [0m[0m  |  [34m[1m          57.8         [0m[0m
      2      x 768   |  [34m[1m          59.9          [0m[0m  |  [34m[1m                 46.5                [0m[0m  |  [92m[1m                              95.8                           [0m[0m  |  [34m[1m                     72.7                    [0m[0m  |  [34m[1m          58.1         [0m[0m
      1      x 768   |  [92m[1m          58.6          [0m[0m  |  [92m[1m                 45.0                [0m[0m  |  [92m[1m                              96.2                           [0m[0m  |  [34m[1m                     72.4                    [0m[0m  |  [34m[1m          58.3         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        722150.0        [0m[0m  |  [31m[1m               755273.7              [0m[0m  |  [31m[1m                           63155.8                           [0m[0m  |  [31m[1m                  1948275.9                  [0m[0m  |  [31m[1m       1944310.5       [0m[0m
      512    x 768   |  [31m[1m        363629.4        [0m[0m  |  [31m[1m               359984.6              [0m[0m  |  [31m[1m                           31779.3                           [0m[0m  |  [31m[1m                   983226.4                  [0m[0m  |  [31m[1m        984910.3       [0m[0m
      256    x 768   |  [31m[1m        180079.9        [0m[0m  |  [31m[1m               180576.7              [0m[0m  |  [31m[1m                           15957.3                           [0m[0m  |  [31m[1m                   488097.9                  [0m[0m  |  [31m[1m        487449.6       [0m[0m
      128    x 768   |  [31m[1m         89377.3        [0m[0m  |  [31m[1m                89243.9              [0m[0m  |  [31m[1m                            8080.8                           [0m[0m  |  [31m[1m                   243052.5                  [0m[0m  |  [31m[1m        243189.4       [0m[0m
      64     x 768   |  [31m[1m         45401.0        [0m[0m  |  [31m[1m                44940.4              [0m[0m  |  [31m[1m                            3171.6                           [0m[0m  |  [31m[1m                   120551.1                  [0m[0m  |  [31m[1m        119739.4       [0m[0m
      32     x 768   |  [31m[1m         22277.1        [0m[0m  |  [31m[1m                22619.8              [0m[0m  |  [31m[1m                            2141.5                           [0m[0m  |  [31m[1m                    59709.6                  [0m[0m  |  [31m[1m         59938.7       [0m[0m
      16     x 768   |  [31m[1m         11228.0        [0m[0m  |  [31m[1m                11511.0              [0m[0m  |  [31m[1m                            1113.6                           [0m[0m  |  [31m[1m                    30622.3                  [0m[0m  |  [31m[1m         30327.1       [0m[0m
      8      x 768   |  [31m[1m          5680.3        [0m[0m  |  [31m[1m                 5927.4              [0m[0m  |  [2m[91m                             604.7                           [0m[0m  |  [31m[1m                    15049.0                  [0m[0m  |  [31m[1m         15040.7       [0m[0m
      4      x 768   |  [2m[91m          2911.0        [0m[0m  |  [2m[91m                 2812.7              [0m[0m  |                               262.7                             |  [2m[91m                     7523.6                  [0m[0m  |  [2m[91m          7484.4       [0m[0m
      2      x 768   |            1477.2          |                   1409.6                |                               179.9                             |                       3805.3                    |  [2m[91m          3855.8       [0m[0m
      1      x 768   |  [92m[1m           787.6        [0m[0m  |  [92m[1m                  736.4              [0m[0m  |  [92m[1m                             148.4                           [0m[0m  |  [92m[1m                     1931.5                  [0m[0m  |  [92m[1m          1896.5       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        794992.2        [0m[0m  |  [31m[1m               804371.5              [0m[0m  |  [31m[1m                           119538.0                          [0m[0m  |  [31m[1m                  1950703.6                  [0m[0m  |  [31m[1m       1969558.2       [0m[0m
      512    x 768   |  [31m[1m        389117.7        [0m[0m  |  [31m[1m               387864.6              [0m[0m  |  [31m[1m                            61786.1                          [0m[0m  |  [31m[1m                   974313.9                  [0m[0m  |  [31m[1m        973928.1       [0m[0m
      256    x 768   |  [31m[1m        192708.4        [0m[0m  |  [31m[1m               190945.7              [0m[0m  |  [31m[1m                            31548.9                          [0m[0m  |  [31m[1m                   487925.7                  [0m[0m  |  [31m[1m        505149.4       [0m[0m
      128    x 768   |  [31m[1m         96277.2        [0m[0m  |  [31m[1m               102396.0              [0m[0m  |  [31m[1m                            15901.1                          [0m[0m  |  [31m[1m                   239963.7                  [0m[0m  |  [31m[1m        241359.0       [0m[0m
      64     x 768   |  [31m[1m         47989.8        [0m[0m  |  [31m[1m                47787.3              [0m[0m  |  [31m[1m                             8215.2                          [0m[0m  |  [31m[1m                   120967.4                  [0m[0m  |  [31m[1m        120855.0       [0m[0m
      32     x 768   |  [31m[1m         23921.0        [0m[0m  |  [31m[1m                24076.4              [0m[0m  |  [31m[1m                             4145.6                          [0m[0m  |  [31m[1m                    59681.2                  [0m[0m  |  [31m[1m         59575.9       [0m[0m
      16     x 768   |  [31m[1m         12093.6        [0m[0m  |  [31m[1m                11993.7              [0m[0m  |  [31m[1m                             2136.2                          [0m[0m  |  [31m[1m                    30050.8                  [0m[0m  |  [31m[1m         30097.7       [0m[0m
      8      x 768   |  [31m[1m          6084.6        [0m[0m  |  [31m[1m                 6007.1              [0m[0m  |  [2m[91m                              874.9                          [0m[0m  |  [31m[1m                    15085.0                  [0m[0m  |  [31m[1m         15023.8       [0m[0m
      4      x 768   |  [2m[91m          3069.6        [0m[0m  |  [2m[91m                 3029.1              [0m[0m  |                                426.0                            |  [2m[91m                     7570.7                  [0m[0m  |  [2m[91m          7538.5       [0m[0m
      2      x 768   |            1579.0          |                   1515.1                |                                344.3                            |                       3818.2                    |            3760.5       
      1      x 768   |  [92m[1m           837.4        [0m[0m  |  [92m[1m                  768.8              [0m[0m  |  [92m[1m                              221.5                          [0m[0m  |  [92m[1m                     1925.3                  [0m[0m  |  [92m[1m          1911.5       [0m[0m

Times are in microseconds (us).
AUTOTUNE bias_addmm(1024x1224, 1024x768, 768x1224)
  bias_addmm 0.0369s 100.0%
  triton_mm_133 0.0369s 100.0%
  triton_mm_135 0.0378s 97.5%
  triton_mm_134 0.0389s 94.7%
  triton_mm_136 0.0389s 94.7%
  triton_mm_132 0.0389s 94.7%
  triton_mm_140 0.0410s 90.0%
  triton_mm_142 0.0420s 87.8%
  addmm 0.0440s 83.8%
  triton_mm_139 0.0452s 81.6%
AUTOTUNE bias_addmm(512x1224, 512x768, 768x1224)
  triton_mm_145 0.0215s 100.0%
  triton_mm_147 0.0215s 100.0%
  bias_addmm 0.0225s 95.5%
  triton_mm_146 0.0225s 95.5%
  triton_mm_148 0.0225s 95.5%
  triton_mm_152 0.0236s 91.3%
  triton_mm_144 0.0236s 91.3%
  triton_mm_149 0.0267s 80.7%
  addmm 0.0267s 80.6%
  triton_mm_150 0.0287s 75.0%
AUTOTUNE bias_addmm(256x1224, 256x768, 768x1224)
  triton_mm_164 0.0143s 100.0%
  bias_addmm 0.0154s 93.3%
  triton_mm_162 0.0164s 87.5%
  triton_mm_161 0.0164s 87.5%
  addmm 0.0195s 73.7%
  triton_mm_157 0.0205s 70.0%
  triton_mm_158 0.0205s 70.0%
  triton_mm_159 0.0205s 70.0%
  triton_mm_160 0.0205s 70.0%
  triton_mm_156 0.0215s 66.7%
AUTOTUNE bias_addmm(128x1224, 128x768, 768x1224)
  triton_mm_174 0.0113s 100.0%
  triton_mm_173 0.0113s 100.0%
  triton_mm_177 0.0133s 84.6%
  triton_mm_176 0.0135s 83.6%
  bias_addmm 0.0143s 78.6%
  addmm 0.0184s 61.1%
  triton_mm_169 0.0205s 55.0%
  triton_mm_170 0.0205s 55.0%
  triton_mm_171 0.0205s 55.0%
  triton_mm_172 0.0205s 55.0%
AUTOTUNE bias_addmm(64x1224, 64x768, 768x1224)
  triton_mm_185 0.0113s 100.0%
  triton_mm_186 0.0113s 100.0%
  triton_mm_189 0.0113s 100.0%
  bias_addmm 0.0123s 91.7%
  triton_mm_188 0.0143s 78.6%
  addmm 0.0154s 73.3%
  triton_mm_181 0.0205s 55.0%
  triton_mm_182 0.0205s 55.0%
  triton_mm_183 0.0205s 55.0%
  triton_mm_184 0.0205s 55.0%
AUTOTUNE bias_addmm(32x1224, 32x768, 768x1224)
  triton_mm_201 0.0102s 100.0%
  triton_mm_198 0.0102s 100.0%
  triton_mm_197 0.0104s 98.8%
  bias_addmm 0.0113s 90.9%
  triton_mm_200 0.0133s 76.9%
  addmm 0.0143s 71.4%
  triton_mm_193 0.0195s 52.6%
  triton_mm_195 0.0195s 52.6%
  triton_mm_196 0.0195s 52.6%
  triton_mm_194 0.0205s 50.0%
AUTOTUNE bias_addmm(16x1224, 16x768, 768x1224)
  triton_mm_210 0.0102s 100.0%
  triton_mm_213 0.0102s 100.0%
  bias_addmm 0.0113s 90.9%
  triton_mm_209 0.0114s 89.9%
  triton_mm_212 0.0133s 76.9%
  addmm 0.0155s 66.2%
  triton_mm_205 0.0195s 52.6%
  triton_mm_206 0.0195s 52.6%
  triton_mm_207 0.0195s 52.6%
  triton_mm_208 0.0205s 50.0%
AUTOTUNE bias_addmm(8x1224, 8x768, 768x1224)
  triton_mm_222 0.0102s 100.0%
  bias_addmm 0.0113s 90.9%
  triton_mm_225 0.0113s 90.9%
  triton_mm_224 0.0133s 76.9%
  triton_mm_221 0.0133s 76.9%
  addmm 0.0154s 66.7%
  triton_mm_217 0.0195s 52.6%
  triton_mm_218 0.0195s 52.6%
  triton_mm_220 0.0195s 52.6%
  triton_mm_219 0.0196s 52.1%
AUTOTUNE bias_addmm(4x1224, 4x768, 768x1224)
  triton_mm_234 0.0102s 100.0%
  bias_addmm 0.0113s 90.9%
  triton_mm_236 0.0143s 71.4%
  triton_mm_237 0.0143s 71.4%
  addmm 0.0164s 62.5%
  triton_mm_233 0.0195s 52.6%
  triton_mm_229 0.0195s 52.6%
  triton_mm_231 0.0195s 52.6%
  triton_mm_228 0.0215s 47.6%
  triton_mm_232 0.0236s 43.5%
AUTOTUNE bias_addmm(2x1224, 2x768, 768x1224)
  triton_mm_246 0.0102s 100.0%
  bias_addmm 0.0113s 90.9%
  addmm 0.0143s 71.4%
  triton_mm_249 0.0164s 62.5%
  triton_mm_248 0.0174s 58.8%
  triton_mm_241 0.0195s 52.6%
  triton_mm_243 0.0195s 52.6%
  triton_mm_245 0.0236s 43.5%
  triton_mm_240 0.0246s 41.7%
  triton_mm_251 0.0256s 40.0%
AUTOTUNE bias_addmm(1x1224, 1x768, 768x1224)
  bias_addmm 0.0082s 100.0%
  addmm 0.0102s 80.0%
  triton_mm_258 0.0113s 72.7%
  triton_mm_255 0.0215s 38.1%
  triton_mm_253 0.0225s 36.4%
  triton_mm_261 0.0256s 32.0%
  triton_mm_263 0.0266s 30.8%
  triton_mm_260 0.0266s 30.8%
  triton_mm_252 0.0358s 22.9%
  triton_mm_257 0.0420s 19.5%
/home/user/build/.venv/lib/python3.10/site-packages/torch/jit/_script.py:1241: UserWarning: `optimize` is deprecated and has no effect. Use `with torch.jit.optimized_execution() instead
  warnings.warn(

Benchmarking batch size 1024 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 1 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [92m[1m         102.6          [0m[0m  |                   54.8                  |  [31m[1m                            1766.5                           [0m[0m  |                      114.6                      |  [2m[91m         114.6         [0m[0m
      512    x 768   |  [34m[1m         109.6          [0m[0m  |                   56.3                  |  [31m[1m                             903.1                           [0m[0m  |  [34m[1m                     95.2                    [0m[0m  |            59.5         
      256    x 768   |  [34m[1m         110.6          [0m[0m  |                   57.6                  |  [2m[91m                             461.8                           [0m[0m  |  [34m[1m                     92.2                    [0m[0m  |  [34m[1m          53.0         [0m[0m
      128    x 768   |  [34m[1m         110.1          [0m[0m  |                   57.2                  |  [2m[91m                             233.9                           [0m[0m  |  [34m[1m                     92.8                    [0m[0m  |  [34m[1m          53.6         [0m[0m
      64     x 768   |  [34m[1m         110.7          [0m[0m  |                   57.1                  |                               133.9                             |  [34m[1m                     95.1                    [0m[0m  |  [34m[1m          54.1         [0m[0m
      32     x 768   |  [34m[1m         103.7          [0m[0m  |                   54.2                  |  [92m[1m                             103.8                           [0m[0m  |  [92m[1m                     88.8                    [0m[0m  |  [92m[1m          50.1         [0m[0m
      16     x 768   |  [92m[1m         103.0          [0m[0m  |                   53.7                  |  [92m[1m                             103.4                           [0m[0m  |  [34m[1m                     91.7                    [0m[0m  |  [34m[1m          53.9         [0m[0m
      8      x 768   |  [34m[1m         103.2          [0m[0m  |                   53.4                  |  [92m[1m                             103.0                           [0m[0m  |  [34m[1m                     90.7                    [0m[0m  |  [34m[1m          53.8         [0m[0m
      4      x 768   |  [34m[1m         103.7          [0m[0m  |                   51.9                  |  [34m[1m                             105.0                           [0m[0m  |  [34m[1m                     90.4                    [0m[0m  |  [34m[1m          53.7         [0m[0m
      2      x 768   |  [92m[1m         102.2          [0m[0m  |  [92m[1m                 39.3                [0m[0m  |  [34m[1m                             106.4                           [0m[0m  |  [34m[1m                     91.0                    [0m[0m  |  [34m[1m          54.1         [0m[0m
      1      x 768   |  [92m[1m         102.6          [0m[0m  |  [34m[1m                 40.3                [0m[0m  |  [34m[1m                             106.1                           [0m[0m  |  [34m[1m                     91.1                    [0m[0m  |  [34m[1m          53.9         [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 1 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
1 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [92m[1m         103.8          [0m[0m  |  [92m[1m                 48.8                [0m[0m  |  [31m[1m                            3586.8                           [0m[0m  |                      116.7                      |  [2m[91m         116.7         [0m[0m
      512    x 768   |  [34m[1m         108.6          [0m[0m  |  [34m[1m                 52.5                [0m[0m  |  [31m[1m                            1795.9                           [0m[0m  |  [34m[1m                     95.4                    [0m[0m  |            59.3         
      256    x 768   |  [34m[1m         111.0          [0m[0m  |                   54.4                  |  [31m[1m                             905.7                           [0m[0m  |  [92m[1m                     92.6                    [0m[0m  |  [92m[1m          53.1         [0m[0m
      128    x 768   |  [34m[1m         110.8          [0m[0m  |                   54.2                  |  [2m[91m                             457.2                           [0m[0m  |  [34m[1m                     93.6                    [0m[0m  |  [92m[1m          53.3         [0m[0m
      64     x 768   |           135.8            |                   67.8                  |                               230.3                             |                      104.5                      |            68.8         
      32     x 768   |           125.6            |                   67.4                  |  [34m[1m                             135.8                           [0m[0m  |                      103.3                      |            65.9         
      16     x 768   |           126.5            |                   71.5                  |  [92m[1m                             125.0                           [0m[0m  |                      106.8                      |            70.0         
      8      x 768   |           125.0            |                   71.4                  |  [92m[1m                             126.0                           [0m[0m  |                      108.6                      |            70.8         
      4      x 768   |           125.7            |                   71.0                  |  [34m[1m                             126.1                           [0m[0m  |                      107.6                      |            70.9         
      2      x 768   |           125.4            |                   57.6                  |  [34m[1m                             129.6                           [0m[0m  |  [92m[1m                     91.7                    [0m[0m  |  [34m[1m          54.2         [0m[0m
      1      x 768   |           126.4            |                   55.8                  |  [92m[1m                             124.7                           [0m[0m  |                      111.4                      |            71.3         

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 2 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1151598.8        [0m[0m  |  [31m[1m               761336.9              [0m[0m  |  [31m[1m                           881002.7                          [0m[0m  |  [31m[1m                  2940015.9                  [0m[0m  |  [31m[1m       1951451.9       [0m[0m
      512    x 768   |  [31m[1m        571530.3        [0m[0m  |  [31m[1m               369276.9              [0m[0m  |  [31m[1m                           437218.0                          [0m[0m  |  [31m[1m                  1417753.3                  [0m[0m  |  [31m[1m       1003223.3       [0m[0m
      256    x 768   |  [31m[1m        287233.6        [0m[0m  |  [31m[1m               180820.2              [0m[0m  |  [31m[1m                           223626.4                          [0m[0m  |  [31m[1m                   707761.4                  [0m[0m  |  [31m[1m        484147.0       [0m[0m
      128    x 768   |  [31m[1m        142310.9        [0m[0m  |  [31m[1m                89645.2              [0m[0m  |  [31m[1m                           111903.0                          [0m[0m  |  [31m[1m                   352660.8                  [0m[0m  |  [31m[1m        242197.7       [0m[0m
      64     x 768   |  [31m[1m         71154.8        [0m[0m  |  [31m[1m                44724.4              [0m[0m  |  [31m[1m                            45616.1                          [0m[0m  |  [31m[1m                   183591.8                  [0m[0m  |  [31m[1m        121383.5       [0m[0m
      32     x 768   |  [31m[1m         35696.6        [0m[0m  |  [31m[1m                22293.5              [0m[0m  |  [31m[1m                            17619.9                          [0m[0m  |  [31m[1m                    88816.0                  [0m[0m  |  [31m[1m         63816.2       [0m[0m
      16     x 768   |  [31m[1m         17602.1        [0m[0m  |  [31m[1m                11226.6              [0m[0m  |  [31m[1m                             8472.7                          [0m[0m  |  [31m[1m                    44467.2                  [0m[0m  |  [31m[1m         30372.6       [0m[0m
      8      x 768   |  [31m[1m          8799.1        [0m[0m  |  [31m[1m                 5643.0              [0m[0m  |  [31m[1m                             4328.4                          [0m[0m  |  [31m[1m                    21864.1                  [0m[0m  |  [31m[1m         15372.6       [0m[0m
      4      x 768   |  [2m[91m          4431.3        [0m[0m  |  [2m[91m                 2817.8              [0m[0m  |  [2m[91m                             2175.3                          [0m[0m  |  [2m[91m                    11234.2                  [0m[0m  |  [2m[91m          7546.4       [0m[0m
      2      x 768   |            2228.0          |                   1423.7                |                               1150.7                            |                       5501.5                    |            3758.3       
      1      x 768   |  [92m[1m          1145.7        [0m[0m  |  [92m[1m                  722.8              [0m[0m  |  [92m[1m                              651.5                          [0m[0m  |  [92m[1m                     2766.8                  [0m[0m  |  [92m[1m          1916.9       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1144323.0        [0m[0m  |  [31m[1m               775590.6              [0m[0m  |  [31m[1m                          1709800.8                          [0m[0m  |  [31m[1m                  2828092.9                  [0m[0m  |  [31m[1m       1992410.1       [0m[0m
      512    x 768   |  [31m[1m        557905.8        [0m[0m  |  [31m[1m               386512.7              [0m[0m  |  [31m[1m                           861065.2                          [0m[0m  |  [31m[1m                  1416681.7                  [0m[0m  |  [31m[1m        976669.3       [0m[0m
      256    x 768   |  [31m[1m        280667.0        [0m[0m  |  [31m[1m               192573.9              [0m[0m  |  [31m[1m                           435994.9                          [0m[0m  |  [31m[1m                   707018.8                  [0m[0m  |  [31m[1m        486956.3       [0m[0m
      128    x 768   |  [31m[1m        139670.5        [0m[0m  |  [31m[1m                97948.7              [0m[0m  |  [31m[1m                           217115.2                          [0m[0m  |  [31m[1m                   353764.9                  [0m[0m  |  [31m[1m        242295.5       [0m[0m
      64     x 768   |  [31m[1m         69658.3        [0m[0m  |  [31m[1m                47788.0              [0m[0m  |  [31m[1m                           110195.1                          [0m[0m  |  [31m[1m                   175889.5                  [0m[0m  |  [31m[1m        120005.6       [0m[0m
      32     x 768   |  [31m[1m         34697.3        [0m[0m  |  [31m[1m                24093.3              [0m[0m  |  [31m[1m                            35357.4                          [0m[0m  |  [31m[1m                    88602.7                  [0m[0m  |  [31m[1m         61380.5       [0m[0m
      16     x 768   |  [31m[1m         17428.5        [0m[0m  |  [31m[1m                12934.7              [0m[0m  |  [31m[1m                            17265.1                          [0m[0m  |  [31m[1m                    44439.7                  [0m[0m  |  [31m[1m         31002.4       [0m[0m
      8      x 768   |  [31m[1m          8618.3        [0m[0m  |  [31m[1m                 6013.1              [0m[0m  |  [31m[1m                             8723.3                          [0m[0m  |  [31m[1m                    22156.6                  [0m[0m  |  [31m[1m         14948.4       [0m[0m
      4      x 768   |  [2m[91m          4361.2        [0m[0m  |  [2m[91m                 2993.1              [0m[0m  |  [2m[91m                             4209.1                          [0m[0m  |  [2m[91m                    10991.6                  [0m[0m  |  [2m[91m          7484.4       [0m[0m
      2      x 768   |            2162.0          |                   1512.2                |                               2164.5                            |                       5561.0                    |            3745.3       
      1      x 768   |  [92m[1m          1102.4        [0m[0m  |  [92m[1m                  768.7              [0m[0m  |  [92m[1m                             1162.9                          [0m[0m  |  [92m[1m                     2805.9                  [0m[0m  |  [92m[1m          1907.6       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 2 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 2 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            79.7            |                   67.9                  |  [31m[1m                            3577.6                           [0m[0m  |  [2m[91m                    112.9                    [0m[0m  |  [2m[91m         114.7         [0m[0m
      512    x 768   |            77.5            |                   68.1                  |  [31m[1m                            1801.0                           [0m[0m  |                       72.9                      |            67.3         
      256    x 768   |            80.5            |                   69.0                  |  [31m[1m                             903.9                           [0m[0m  |                       68.6                      |            65.8         
      128    x 768   |            80.4            |                   68.8                  |  [31m[1m                             460.3                           [0m[0m  |                       69.1                      |            64.7         
      64     x 768   |            78.0            |                   68.4                  |  [2m[91m                             231.9                           [0m[0m  |                       68.8                      |            66.7         
      32     x 768   |            78.2            |                   68.8                  |                               121.0                             |                       70.0                      |            66.0         
      16     x 768   |            76.0            |                   69.3                  |                               105.2                             |                       69.8                      |            70.4         
      8      x 768   |            71.5            |                   68.3                  |                               104.6                             |                       69.7                      |            69.7         
      4      x 768   |            72.6            |                   67.3                  |                               105.5                             |                       70.5                      |            70.8         
      2      x 768   |  [34m[1m          48.4          [0m[0m  |  [92m[1m                 39.4                [0m[0m  |  [92m[1m                              80.1                           [0m[0m  |  [34m[1m                     48.9                    [0m[0m  |  [34m[1m          54.0         [0m[0m
      1      x 768   |  [92m[1m          46.7          [0m[0m  |  [34m[1m                 39.9                [0m[0m  |  [92m[1m                              79.6                           [0m[0m  |  [92m[1m                     47.0                    [0m[0m  |  [92m[1m          53.5         [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m          48.5          [0m[0m  |                   47.8                  |  [31m[1m                            8405.0                           [0m[0m  |  [2m[91m                    115.0                    [0m[0m  |  [2m[91m         116.8         [0m[0m
      512    x 768   |            52.4            |                   52.3                  |  [31m[1m                            4194.4                           [0m[0m  |                       69.2                      |            59.3         
      256    x 768   |            52.8            |                   54.8                  |  [31m[1m                            2100.4                           [0m[0m  |  [34m[1m                     52.6                    [0m[0m  |  [92m[1m          50.3         [0m[0m
      128    x 768   |            52.4            |                   50.9                  |  [31m[1m                            1065.3                           [0m[0m  |  [34m[1m                     49.6                    [0m[0m  |  [92m[1m          50.5         [0m[0m
      64     x 768   |            52.7            |                   51.2                  |  [31m[1m                             536.1                           [0m[0m  |  [92m[1m                     48.5                    [0m[0m  |  [34m[1m          51.3         [0m[0m
      32     x 768   |            57.5            |                   51.0                  |  [2m[91m                             270.7                           [0m[0m  |  [34m[1m                     50.1                    [0m[0m  |  [34m[1m          51.7         [0m[0m
      16     x 768   |            57.3            |                   55.0                  |                               140.1                             |  [34m[1m                     49.9                    [0m[0m  |  [34m[1m          55.0         [0m[0m
      8      x 768   |            56.6            |                   56.9                  |  [92m[1m                              80.9                           [0m[0m  |  [34m[1m                     50.4                    [0m[0m  |  [34m[1m          54.8         [0m[0m
      4      x 768   |            56.8            |                   53.8                  |  [92m[1m                              80.8                           [0m[0m  |  [34m[1m                     49.8                    [0m[0m  |  [34m[1m          54.2         [0m[0m
      2      x 768   |            51.7            |  [34m[1m                 42.1                [0m[0m  |  [34m[1m                              81.9                           [0m[0m  |  [34m[1m                     50.6                    [0m[0m  |  [34m[1m          54.3         [0m[0m
      1      x 768   |  [92m[1m          46.9          [0m[0m  |  [92m[1m                 41.4                [0m[0m  |  [92m[1m                              80.6                           [0m[0m  |  [92m[1m                     48.5                    [0m[0m  |  [34m[1m          55.0         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        732501.0        [0m[0m  |  [31m[1m               725849.6              [0m[0m  |  [31m[1m                           873057.4                          [0m[0m  |  [31m[1m                  1949777.8                  [0m[0m  |  [31m[1m       2058557.5       [0m[0m
      512    x 768   |  [31m[1m        362835.0        [0m[0m  |  [31m[1m               369871.1              [0m[0m  |  [31m[1m                           436721.9                          [0m[0m  |  [31m[1m                   977590.7                  [0m[0m  |  [31m[1m        977716.3       [0m[0m
      256    x 768   |  [31m[1m        181795.0        [0m[0m  |  [31m[1m               180137.1              [0m[0m  |  [31m[1m                           218784.9                          [0m[0m  |  [31m[1m                   484354.5                  [0m[0m  |  [31m[1m        490065.2       [0m[0m
      128    x 768   |  [31m[1m         89933.9        [0m[0m  |  [31m[1m                89690.6              [0m[0m  |  [31m[1m                           113455.6                          [0m[0m  |  [31m[1m                   243256.3                  [0m[0m  |  [31m[1m        242453.0       [0m[0m
      64     x 768   |  [31m[1m         44822.0        [0m[0m  |  [31m[1m                44949.3              [0m[0m  |  [31m[1m                            45712.5                          [0m[0m  |  [31m[1m                   119719.8                  [0m[0m  |  [31m[1m        120148.7       [0m[0m
      32     x 768   |  [31m[1m         22321.9        [0m[0m  |  [31m[1m                22365.1              [0m[0m  |  [31m[1m                            17425.8                          [0m[0m  |  [31m[1m                    61459.5                  [0m[0m  |  [31m[1m         61259.7       [0m[0m
      16     x 768   |  [31m[1m         11223.3        [0m[0m  |  [31m[1m                11208.9              [0m[0m  |  [31m[1m                             8512.5                          [0m[0m  |  [31m[1m                    30184.0                  [0m[0m  |  [31m[1m         29964.3       [0m[0m
      8      x 768   |  [31m[1m          5594.1        [0m[0m  |  [31m[1m                 5782.6              [0m[0m  |  [31m[1m                             4289.2                          [0m[0m  |  [31m[1m                    15008.8                  [0m[0m  |  [31m[1m         15053.0       [0m[0m
      4      x 768   |  [2m[91m          2813.1        [0m[0m  |  [2m[91m                 2816.2              [0m[0m  |  [2m[91m                             2386.4                          [0m[0m  |  [2m[91m                     7563.0                  [0m[0m  |  [2m[91m          7566.3       [0m[0m
      2      x 768   |            1422.5          |                   1411.0                |                               1161.4                            |                       3758.5                    |            3765.0       
      1      x 768   |  [92m[1m           728.7        [0m[0m  |  [92m[1m                  721.3              [0m[0m  |  [92m[1m                              619.7                          [0m[0m  |  [92m[1m                     1916.0                  [0m[0m  |  [92m[1m          1886.4       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        768861.8        [0m[0m  |  [31m[1m               775548.9              [0m[0m  |  [31m[1m                          1817294.5                          [0m[0m  |  [31m[1m                  1942903.3                  [0m[0m  |  [31m[1m       1935503.6       [0m[0m
      512    x 768   |  [31m[1m        389547.6        [0m[0m  |  [31m[1m               388516.1              [0m[0m  |  [31m[1m                           857891.6                          [0m[0m  |  [31m[1m                   972853.8                  [0m[0m  |  [31m[1m        973834.4       [0m[0m
      256    x 768   |  [31m[1m        192100.0        [0m[0m  |  [31m[1m               193360.2              [0m[0m  |  [31m[1m                           428464.7                          [0m[0m  |  [31m[1m                   489586.8                  [0m[0m  |  [31m[1m        487060.1       [0m[0m
      128    x 768   |  [31m[1m         95471.8        [0m[0m  |  [31m[1m                95419.1              [0m[0m  |  [31m[1m                           223911.1                          [0m[0m  |  [31m[1m                   241023.9                  [0m[0m  |  [31m[1m        240047.9       [0m[0m
      64     x 768   |  [31m[1m         47493.4        [0m[0m  |  [31m[1m                47570.5              [0m[0m  |  [31m[1m                           112911.1                          [0m[0m  |  [31m[1m                   120719.9                  [0m[0m  |  [31m[1m        124192.9       [0m[0m
      32     x 768   |  [31m[1m         23945.7        [0m[0m  |  [31m[1m                23907.2              [0m[0m  |  [31m[1m                            35728.0                          [0m[0m  |  [31m[1m                    59887.7                  [0m[0m  |  [31m[1m         60139.1       [0m[0m
      16     x 768   |  [31m[1m         11889.9        [0m[0m  |  [31m[1m                12012.2              [0m[0m  |  [31m[1m                            17149.3                          [0m[0m  |  [31m[1m                    29867.9                  [0m[0m  |  [31m[1m         30030.4       [0m[0m
      8      x 768   |  [31m[1m          6055.8        [0m[0m  |  [31m[1m                 6003.5              [0m[0m  |  [31m[1m                             8536.8                          [0m[0m  |  [31m[1m                    14992.0                  [0m[0m  |  [31m[1m         14926.7       [0m[0m
      4      x 768   |  [2m[91m          3029.5        [0m[0m  |  [2m[91m                 3003.6              [0m[0m  |  [2m[91m                             4245.0                          [0m[0m  |  [2m[91m                     7563.5                  [0m[0m  |  [2m[91m          7530.7       [0m[0m
      2      x 768   |            1518.8          |                   1508.1                |                               2155.3                            |                       3771.5                    |            3768.2       
      1      x 768   |  [92m[1m           798.2        [0m[0m  |  [92m[1m                  770.7              [0m[0m  |  [92m[1m                             1120.8                          [0m[0m  |  [92m[1m                     1904.1                  [0m[0m  |  [92m[1m          1895.1       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 2 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            69.1            |                   55.6                  |  [31m[1m                            3583.2                           [0m[0m  |                      114.6                      |  [2m[91m         114.7         [0m[0m
      512    x 768   |            69.4            |                   55.4                  |  [31m[1m                            1807.4                           [0m[0m  |  [34m[1m                     68.6                    [0m[0m  |            58.7         
      256    x 768   |            69.2            |                   55.6                  |  [31m[1m                             915.1                           [0m[0m  |  [92m[1m                     66.1                    [0m[0m  |  [92m[1m          51.5         [0m[0m
      128    x 768   |            69.7            |                   55.6                  |  [31m[1m                             460.3                           [0m[0m  |  [92m[1m                     65.9                    [0m[0m  |  [92m[1m          51.7         [0m[0m
      64     x 768   |            69.0            |                   53.8                  |  [2m[91m                             232.3                           [0m[0m  |  [34m[1m                     66.8                    [0m[0m  |  [34m[1m          52.3         [0m[0m
      32     x 768   |            69.4            |                   55.2                  |                               120.9                             |  [92m[1m                     66.3                    [0m[0m  |  [34m[1m          52.3         [0m[0m
      16     x 768   |            69.5            |                   55.7                  |  [34m[1m                              93.4                           [0m[0m  |  [34m[1m                     70.5                    [0m[0m  |  [34m[1m          56.4         [0m[0m
      8      x 768   |            69.5            |                   55.5                  |  [92m[1m                              91.9                           [0m[0m  |  [34m[1m                     70.2                    [0m[0m  |  [34m[1m          56.1         [0m[0m
      4      x 768   |            67.5            |                   53.1                  |  [92m[1m                              92.5                           [0m[0m  |  [34m[1m                     70.7                    [0m[0m  |  [34m[1m          56.6         [0m[0m
      2      x 768   |  [92m[1m          56.5          [0m[0m  |  [92m[1m                 42.2                [0m[0m  |  [92m[1m                              92.8                           [0m[0m  |  [34m[1m                     70.5                    [0m[0m  |  [34m[1m          56.4         [0m[0m
      1      x 768   |  [92m[1m          56.8          [0m[0m  |  [92m[1m                 41.9                [0m[0m  |  [34m[1m                              93.3                           [0m[0m  |  [34m[1m                     71.7                    [0m[0m  |            57.0         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            65.1            |                   50.6                  |  [31m[1m                            8377.1                           [0m[0m  |                      116.4                      |  [2m[91m         116.5         [0m[0m
      512    x 768   |            65.6            |                   50.8                  |  [31m[1m                            4185.4                           [0m[0m  |  [34m[1m                     68.5                    [0m[0m  |            59.2         
      256    x 768   |            66.1            |                   52.7                  |  [31m[1m                            2100.6                           [0m[0m  |  [34m[1m                     67.1                    [0m[0m  |  [92m[1m          51.5         [0m[0m
      128    x 768   |            66.0            |                   52.5                  |  [31m[1m                            1060.9                           [0m[0m  |  [92m[1m                     65.7                    [0m[0m  |  [92m[1m          51.8         [0m[0m
      64     x 768   |            67.0            |                   52.6                  |  [31m[1m                             535.9                           [0m[0m  |  [34m[1m                     67.0                    [0m[0m  |  [34m[1m          52.9         [0m[0m
      32     x 768   |            67.3            |                   52.5                  |  [2m[91m                             270.1                           [0m[0m  |  [34m[1m                     66.6                    [0m[0m  |  [34m[1m          52.4         [0m[0m
      16     x 768   |            72.3            |                   56.5                  |                               141.1                             |  [34m[1m                     70.6                    [0m[0m  |  [34m[1m          56.2         [0m[0m
      8      x 768   |            71.8            |                   56.0                  |  [34m[1m                              94.6                           [0m[0m  |  [34m[1m                     70.1                    [0m[0m  |  [34m[1m          56.2         [0m[0m
      4      x 768   |            72.2            |                   56.5                  |  [92m[1m                              92.4                           [0m[0m  |  [34m[1m                     70.0                    [0m[0m  |  [34m[1m          56.1         [0m[0m
      2      x 768   |  [34m[1m          58.7          [0m[0m  |  [34m[1m                 43.2                [0m[0m  |  [92m[1m                              92.9                           [0m[0m  |  [34m[1m                     70.4                    [0m[0m  |  [34m[1m          56.5         [0m[0m
      1      x 768   |  [92m[1m          56.9          [0m[0m  |  [92m[1m                 42.3                [0m[0m  |  [92m[1m                              92.5                           [0m[0m  |  [34m[1m                     70.4                    [0m[0m  |  [34m[1m          56.0         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        726969.3        [0m[0m  |  [31m[1m               719230.1              [0m[0m  |  [31m[1m                           63349.9                           [0m[0m  |  [31m[1m                  1942604.1                  [0m[0m  |  [31m[1m       2184789.4       [0m[0m
      512    x 768   |  [31m[1m        360397.3        [0m[0m  |  [31m[1m               359316.2              [0m[0m  |  [31m[1m                           31665.8                           [0m[0m  |  [31m[1m                   973013.4                  [0m[0m  |  [31m[1m        974376.6       [0m[0m
      256    x 768   |  [31m[1m        181741.0        [0m[0m  |  [31m[1m               179669.8              [0m[0m  |  [31m[1m                           15926.6                           [0m[0m  |  [31m[1m                   483856.9                  [0m[0m  |  [31m[1m        483520.5       [0m[0m
      128    x 768   |  [31m[1m         89280.5        [0m[0m  |  [31m[1m                89213.2              [0m[0m  |  [31m[1m                            8099.5                           [0m[0m  |  [31m[1m                   241299.8                  [0m[0m  |  [31m[1m        240235.7       [0m[0m
      64     x 768   |  [31m[1m         44448.5        [0m[0m  |  [31m[1m                44686.8              [0m[0m  |  [31m[1m                            4242.2                           [0m[0m  |  [31m[1m                   119661.1                  [0m[0m  |  [31m[1m        120457.0       [0m[0m
      32     x 768   |  [31m[1m         22305.2        [0m[0m  |  [31m[1m                22274.1              [0m[0m  |  [31m[1m                            2190.8                           [0m[0m  |  [31m[1m                    59954.1                  [0m[0m  |  [31m[1m         59862.4       [0m[0m
      16     x 768   |  [31m[1m         11255.2        [0m[0m  |  [31m[1m                11105.8              [0m[0m  |  [31m[1m                            1139.4                           [0m[0m  |  [31m[1m                    29800.4                  [0m[0m  |  [31m[1m         29897.9       [0m[0m
      8      x 768   |  [31m[1m          5689.7        [0m[0m  |  [31m[1m                 5589.0              [0m[0m  |  [2m[91m                             623.8                           [0m[0m  |  [31m[1m                    14913.4                  [0m[0m  |  [31m[1m         14994.7       [0m[0m
      4      x 768   |  [2m[91m          2872.1        [0m[0m  |  [2m[91m                 2795.9              [0m[0m  |  [2m[91m                             364.0                           [0m[0m  |  [2m[91m                     7496.0                  [0m[0m  |  [2m[91m          7473.3       [0m[0m
      2      x 768   |            1469.3          |                   1403.2                |                               235.9                             |                       3781.2                    |            3755.5       
      1      x 768   |  [92m[1m           783.6        [0m[0m  |  [92m[1m                  715.8              [0m[0m  |  [92m[1m                             162.6                           [0m[0m  |  [92m[1m                     2020.5                  [0m[0m  |  [92m[1m          1941.6       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        792287.2        [0m[0m  |  [31m[1m               822622.1              [0m[0m  |  [31m[1m                           125046.7                          [0m[0m  |  [31m[1m                  2142899.0                  [0m[0m  |  [31m[1m       1978265.6       [0m[0m
      512    x 768   |  [31m[1m        394711.2        [0m[0m  |  [31m[1m               390151.8              [0m[0m  |  [31m[1m                            62939.6                          [0m[0m  |  [31m[1m                   983539.1                  [0m[0m  |  [31m[1m       1066420.1       [0m[0m
      256    x 768   |  [31m[1m        193111.1        [0m[0m  |  [31m[1m               194826.1              [0m[0m  |  [31m[1m                            31579.7                          [0m[0m  |  [31m[1m                   488918.6                  [0m[0m  |  [31m[1m        490443.6       [0m[0m
      128    x 768   |  [31m[1m         96259.0        [0m[0m  |  [31m[1m                96148.3              [0m[0m  |  [31m[1m                            15895.0                          [0m[0m  |  [31m[1m                   244920.0                  [0m[0m  |  [31m[1m        243336.6       [0m[0m
      64     x 768   |  [31m[1m         48390.4        [0m[0m  |  [31m[1m                47905.6              [0m[0m  |  [31m[1m                             8213.3                          [0m[0m  |  [31m[1m                   120995.3                  [0m[0m  |  [31m[1m        120092.5       [0m[0m
      32     x 768   |  [31m[1m         24069.6        [0m[0m  |  [31m[1m                24006.6              [0m[0m  |  [31m[1m                             4142.9                          [0m[0m  |  [31m[1m                    59806.5                  [0m[0m  |  [31m[1m         60301.8       [0m[0m
      16     x 768   |  [31m[1m         11993.9        [0m[0m  |  [31m[1m                11905.6              [0m[0m  |  [31m[1m                             2097.2                          [0m[0m  |  [31m[1m                    29994.0                  [0m[0m  |  [31m[1m         30696.6       [0m[0m
      8      x 768   |  [31m[1m          6025.8        [0m[0m  |  [31m[1m                 5968.0              [0m[0m  |  [2m[91m                              861.5                          [0m[0m  |  [31m[1m                    14915.3                  [0m[0m  |  [31m[1m         14913.5       [0m[0m
      4      x 768   |  [2m[91m          3052.8        [0m[0m  |  [2m[91m                 2992.5              [0m[0m  |  [2m[91m                              590.1                          [0m[0m  |  [2m[91m                     7544.0                  [0m[0m  |  [2m[91m          7501.8       [0m[0m
      2      x 768   |            1593.2          |                   1513.1                |                                273.2                            |                       3798.4                    |            3774.3       
      1      x 768   |  [92m[1m           864.4        [0m[0m  |  [92m[1m                  767.4              [0m[0m  |  [92m[1m                              221.0                          [0m[0m  |  [92m[1m                     1941.3                  [0m[0m  |  [92m[1m          1909.5       [0m[0m

Times are in microseconds (us).
/home/user/build/.venv/lib/python3.10/site-packages/torch/jit/_script.py:1241: UserWarning: `optimize` is deprecated and has no effect. Use `with torch.jit.optimized_execution() instead
  warnings.warn(

Benchmarking batch size 1024 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 2 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m         110.0          [0m[0m  |                   60.0                  |  [31m[1m                            1770.8                           [0m[0m  |                      114.6                      |  [2m[91m         114.5         [0m[0m
      512    x 768   |           128.4            |                   69.7                  |  [31m[1m                             903.8                           [0m[0m  |                      110.6                      |            69.0         
      256    x 768   |           130.4            |                   72.2                  |  [2m[91m                             455.5                           [0m[0m  |                      106.6                      |            67.5         
      128    x 768   |           129.0            |                   70.3                  |  [2m[91m                             233.7                           [0m[0m  |                      107.5                      |  [92m[1m          52.3         [0m[0m
      64     x 768   |  [34m[1m         110.4          [0m[0m  |                   55.4                  |                               134.1                             |  [92m[1m                     91.7                    [0m[0m  |  [92m[1m          52.4         [0m[0m
      32     x 768   |  [34m[1m         109.6          [0m[0m  |                   57.0                  |  [34m[1m                             112.0                           [0m[0m  |  [34m[1m                     93.2                    [0m[0m  |  [34m[1m          54.3         [0m[0m
      16     x 768   |  [34m[1m         109.2          [0m[0m  |                   57.9                  |  [34m[1m                             110.8                           [0m[0m  |  [34m[1m                     96.6                    [0m[0m  |  [34m[1m          57.2         [0m[0m
      8      x 768   |  [34m[1m         111.0          [0m[0m  |                   59.1                  |  [34m[1m                             110.6                           [0m[0m  |  [34m[1m                     98.4                    [0m[0m  |            58.0         
      4      x 768   |  [34m[1m         110.7          [0m[0m  |                   54.5                  |  [34m[1m                             110.3                           [0m[0m  |  [34m[1m                     97.0                    [0m[0m  |            57.8         
      2      x 768   |  [92m[1m         103.6          [0m[0m  |  [92m[1m                 40.7                [0m[0m  |  [92m[1m                             103.4                           [0m[0m  |  [92m[1m                     91.3                    [0m[0m  |  [34m[1m          55.0         [0m[0m
      1      x 768   |  [92m[1m         103.8          [0m[0m  |  [92m[1m                 40.5                [0m[0m  |  [34m[1m                             104.6                           [0m[0m  |  [34m[1m                     93.3                    [0m[0m  |  [34m[1m          55.2         [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 2 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
2 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [92m[1m         102.6          [0m[0m  |                   48.8                  |  [31m[1m                            3590.0                           [0m[0m  |                      115.9                      |  [2m[91m         116.5         [0m[0m
      512    x 768   |  [34m[1m         103.7          [0m[0m  |                   50.0                  |  [31m[1m                            1798.2                           [0m[0m  |  [34m[1m                     89.5                    [0m[0m  |            59.7         
      256    x 768   |  [34m[1m         104.7          [0m[0m  |                   50.0                  |  [31m[1m                             903.9                           [0m[0m  |  [92m[1m                     86.3                    [0m[0m  |  [92m[1m          49.5         [0m[0m
      128    x 768   |  [34m[1m         104.9          [0m[0m  |                   51.8                  |  [2m[91m                             456.8                           [0m[0m  |  [92m[1m                     86.8                    [0m[0m  |  [34m[1m          50.2         [0m[0m
      64     x 768   |  [34m[1m         104.0          [0m[0m  |                   51.0                  |  [2m[91m                             231.2                           [0m[0m  |  [34m[1m                     87.3                    [0m[0m  |  [34m[1m          50.4         [0m[0m
      32     x 768   |  [34m[1m         106.3          [0m[0m  |                   51.4                  |                               119.0                             |  [34m[1m                     87.2                    [0m[0m  |  [34m[1m          50.1         [0m[0m
      16     x 768   |  [34m[1m         106.2          [0m[0m  |                   54.6                  |  [34m[1m                             105.8                           [0m[0m  |  [34m[1m                     91.2                    [0m[0m  |  [34m[1m          54.3         [0m[0m
      8      x 768   |  [34m[1m         106.6          [0m[0m  |                   54.6                  |  [34m[1m                             105.2                           [0m[0m  |  [34m[1m                     91.9                    [0m[0m  |            55.8         
      4      x 768   |  [34m[1m         103.7          [0m[0m  |                   55.6                  |  [34m[1m                             105.4                           [0m[0m  |  [34m[1m                     92.6                    [0m[0m  |  [34m[1m          54.5         [0m[0m
      2      x 768   |  [34m[1m         104.3          [0m[0m  |  [34m[1m                 41.9                [0m[0m  |  [34m[1m                             106.5                           [0m[0m  |  [34m[1m                     92.8                    [0m[0m  |            56.0         
      1      x 768   |  [34m[1m         103.9          [0m[0m  |  [92m[1m                 40.8                [0m[0m  |  [92m[1m                             103.7                           [0m[0m  |  [34m[1m                     91.1                    [0m[0m  |  [34m[1m          53.7         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 4 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1193585.6        [0m[0m  |  [31m[1m               752652.2              [0m[0m  |  [31m[1m                           503558.6                          [0m[0m  |  [31m[1m                  2936895.6                  [0m[0m  |  [31m[1m       1967394.9       [0m[0m
      512    x 768   |  [31m[1m        572933.4        [0m[0m  |  [31m[1m               366779.9              [0m[0m  |  [31m[1m                           254915.2                          [0m[0m  |  [31m[1m                  1442769.5                  [0m[0m  |  [31m[1m        980148.9       [0m[0m
      256    x 768   |  [31m[1m        299502.1        [0m[0m  |  [31m[1m               182934.2              [0m[0m  |  [31m[1m                           131184.5                          [0m[0m  |  [31m[1m                   719001.0                  [0m[0m  |  [31m[1m        488321.0       [0m[0m
      128    x 768   |  [31m[1m        143357.3        [0m[0m  |  [31m[1m                92283.4              [0m[0m  |  [31m[1m                            64166.3                          [0m[0m  |  [31m[1m                   354180.3                  [0m[0m  |  [31m[1m        243173.8       [0m[0m
      64     x 768   |  [31m[1m         71026.9        [0m[0m  |  [31m[1m                45098.8              [0m[0m  |  [31m[1m                            26955.2                          [0m[0m  |  [31m[1m                   178987.5                  [0m[0m  |  [31m[1m        121731.9       [0m[0m
      32     x 768   |  [31m[1m         36345.1        [0m[0m  |  [31m[1m                22702.4              [0m[0m  |  [31m[1m                             9595.6                          [0m[0m  |  [31m[1m                    89336.6                  [0m[0m  |  [31m[1m         60603.0       [0m[0m
      16     x 768   |  [31m[1m         17692.0        [0m[0m  |  [31m[1m                11652.0              [0m[0m  |  [31m[1m                             4799.6                          [0m[0m  |  [31m[1m                    45040.6                  [0m[0m  |  [31m[1m         30549.8       [0m[0m
      8      x 768   |  [31m[1m          8845.3        [0m[0m  |  [31m[1m                 5666.2              [0m[0m  |  [31m[1m                             2405.0                          [0m[0m  |  [31m[1m                    22103.8                  [0m[0m  |  [31m[1m         15216.8       [0m[0m
      4      x 768   |  [2m[91m          4449.2        [0m[0m  |  [2m[91m                 2822.6              [0m[0m  |  [2m[91m                             1290.6                          [0m[0m  |  [2m[91m                    11157.7                  [0m[0m  |  [2m[91m          7631.6       [0m[0m
      2      x 768   |            2217.1          |                   1421.1                |                                683.5                            |                       5599.7                    |            3802.4       
      1      x 768   |  [92m[1m          1146.5        [0m[0m  |  [92m[1m                  724.6              [0m[0m  |  [92m[1m                              367.0                          [0m[0m  |  [92m[1m                     2809.5                  [0m[0m  |  [92m[1m          1920.9       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1129422.9        [0m[0m  |  [31m[1m               779245.6              [0m[0m  |  [31m[1m                           989769.8                          [0m[0m  |  [31m[1m                  2868912.6                  [0m[0m  |  [31m[1m       1980980.7       [0m[0m
      512    x 768   |  [31m[1m        578169.5        [0m[0m  |  [31m[1m               406913.7              [0m[0m  |  [31m[1m                           494712.3                          [0m[0m  |  [31m[1m                  1432867.0                  [0m[0m  |  [31m[1m        979383.8       [0m[0m
      256    x 768   |  [31m[1m        286144.6        [0m[0m  |  [31m[1m               196484.7              [0m[0m  |  [31m[1m                           258163.4                          [0m[0m  |  [31m[1m                   713030.4                  [0m[0m  |  [31m[1m        491527.3       [0m[0m
      128    x 768   |  [31m[1m        140962.2        [0m[0m  |  [31m[1m               105386.1              [0m[0m  |  [31m[1m                           135968.8                          [0m[0m  |  [31m[1m                   354617.6                  [0m[0m  |  [31m[1m        244655.0       [0m[0m
      64     x 768   |  [31m[1m         70227.4        [0m[0m  |  [31m[1m                48695.9              [0m[0m  |  [31m[1m                            67233.5                          [0m[0m  |  [31m[1m                   179182.4                  [0m[0m  |  [31m[1m        122087.1       [0m[0m
      32     x 768   |  [31m[1m         35503.4        [0m[0m  |  [31m[1m                24775.4              [0m[0m  |  [31m[1m                            20761.6                          [0m[0m  |  [31m[1m                    89726.3                  [0m[0m  |  [31m[1m         60806.6       [0m[0m
      16     x 768   |  [31m[1m         17631.7        [0m[0m  |  [31m[1m                11943.5              [0m[0m  |  [31m[1m                             9129.7                          [0m[0m  |  [31m[1m                    45690.8                  [0m[0m  |  [31m[1m         30439.3       [0m[0m
      8      x 768   |  [31m[1m          8772.2        [0m[0m  |  [31m[1m                 6089.2              [0m[0m  |  [31m[1m                             4768.6                          [0m[0m  |  [31m[1m                    22337.6                  [0m[0m  |  [31m[1m         15130.7       [0m[0m
      4      x 768   |  [2m[91m          4422.5        [0m[0m  |  [2m[91m                 3047.5              [0m[0m  |  [2m[91m                             2308.7                          [0m[0m  |  [2m[91m                    11269.3                  [0m[0m  |  [2m[91m          7657.9       [0m[0m
      2      x 768   |            2267.0          |                   1544.6                |                               1244.3                            |  [2m[91m                     5665.3                  [0m[0m  |            3864.7       
      1      x 768   |  [92m[1m          1138.5        [0m[0m  |  [92m[1m                  783.6              [0m[0m  |  [92m[1m                              665.3                          [0m[0m  |  [92m[1m                     2826.1                  [0m[0m  |  [92m[1m          1932.8       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 4 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 4 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            61.5            |                   71.3                  |  [31m[1m                            3583.9                           [0m[0m  |  [2m[91m                    113.0                    [0m[0m  |  [2m[91m         114.5         [0m[0m
      512    x 768   |            78.4            |                   70.5                  |  [31m[1m                            1798.1                           [0m[0m  |                       73.6                      |            67.7         
      256    x 768   |            77.5            |                   69.5                  |  [31m[1m                             904.0                           [0m[0m  |                       67.3                      |            64.7         
      128    x 768   |            77.9            |                   69.6                  |  [31m[1m                             460.9                           [0m[0m  |                       69.4                      |            64.6         
      64     x 768   |            76.8            |                   55.2                  |  [2m[91m                             231.7                           [0m[0m  |  [34m[1m                     51.2                    [0m[0m  |  [34m[1m          53.4         [0m[0m
      32     x 768   |            59.0            |                   53.9                  |                               120.9                             |  [92m[1m                     50.1                    [0m[0m  |  [92m[1m          51.3         [0m[0m
      16     x 768   |  [34m[1m          51.7          [0m[0m  |                   53.7                  |  [92m[1m                              80.7                           [0m[0m  |                       72.9                      |            70.3         
      8      x 768   |  [34m[1m          54.5          [0m[0m  |                   56.2                  |  [34m[1m                              86.5                           [0m[0m  |  [34m[1m                     54.0                    [0m[0m  |            57.6         
      4      x 768   |  [34m[1m          55.3          [0m[0m  |                   54.6                  |  [34m[1m                              86.6                           [0m[0m  |  [34m[1m                     54.3                    [0m[0m  |            58.1         
      2      x 768   |  [34m[1m          52.4          [0m[0m  |  [92m[1m                 43.8                [0m[0m  |  [34m[1m                              87.4                           [0m[0m  |  [34m[1m                     53.9                    [0m[0m  |            58.4         
      1      x 768   |  [92m[1m          51.0          [0m[0m  |  [92m[1m                 43.8                [0m[0m  |  [34m[1m                              84.4                           [0m[0m  |  [34m[1m                     51.3                    [0m[0m  |            56.5         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m          51.5          [0m[0m  |                   50.8                  |  [31m[1m                            8382.1                           [0m[0m  |  [2m[91m                    114.8                    [0m[0m  |  [2m[91m         116.6         [0m[0m
      512    x 768   |  [92m[1m          50.3          [0m[0m  |                   52.3                  |  [31m[1m                            4186.5                           [0m[0m  |                       69.4                      |            59.2         
      256    x 768   |  [34m[1m          53.7          [0m[0m  |                   54.3                  |  [31m[1m                            2108.1                           [0m[0m  |  [34m[1m                     53.0                    [0m[0m  |  [34m[1m          54.8         [0m[0m
      128    x 768   |            58.6            |                   55.5                  |  [31m[1m                            1062.4                           [0m[0m  |  [34m[1m                     54.6                    [0m[0m  |  [34m[1m          54.7         [0m[0m
      64     x 768   |            57.8            |                   53.6                  |  [31m[1m                             536.2                           [0m[0m  |  [92m[1m                     51.7                    [0m[0m  |  [34m[1m          54.0         [0m[0m
      32     x 768   |            60.6            |                   53.9                  |  [2m[91m                             270.2                           [0m[0m  |  [92m[1m                     52.1                    [0m[0m  |  [92m[1m          52.6         [0m[0m
      16     x 768   |            60.5            |                   57.4                  |                               141.5                             |  [34m[1m                     52.4                    [0m[0m  |  [34m[1m          57.3         [0m[0m
      8      x 768   |            60.5            |                   58.4                  |  [92m[1m                              85.2                           [0m[0m  |                       69.5                      |            70.3         
      4      x 768   |            79.2            |                   70.9                  |                               105.6                             |                       71.1                      |  [34m[1m          57.6         [0m[0m
      2      x 768   |            57.8            |  [34m[1m                 44.5                [0m[0m  |  [92m[1m                              85.8                           [0m[0m  |  [34m[1m                     54.3                    [0m[0m  |  [34m[1m          57.7         [0m[0m
      1      x 768   |  [92m[1m          50.7          [0m[0m  |  [92m[1m                 43.1                [0m[0m  |  [92m[1m                              85.5                           [0m[0m  |  [92m[1m                     51.7                    [0m[0m  |            58.0         

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        736151.6        [0m[0m  |  [31m[1m               726107.1              [0m[0m  |  [31m[1m                           502954.6                          [0m[0m  |  [31m[1m                  1960989.0                  [0m[0m  |  [31m[1m       1967241.7       [0m[0m
      512    x 768   |  [31m[1m        363509.2        [0m[0m  |  [31m[1m               364822.2              [0m[0m  |  [31m[1m                           260585.0                          [0m[0m  |  [31m[1m                   979233.7                  [0m[0m  |  [31m[1m        981603.3       [0m[0m
      256    x 768   |  [31m[1m        183377.1        [0m[0m  |  [31m[1m               179654.8              [0m[0m  |  [31m[1m                           128413.2                          [0m[0m  |  [31m[1m                   489769.8                  [0m[0m  |  [31m[1m        505942.7       [0m[0m
      128    x 768   |  [31m[1m         91672.3        [0m[0m  |  [31m[1m                94067.5              [0m[0m  |  [31m[1m                            64986.0                          [0m[0m  |  [31m[1m                   242390.3                  [0m[0m  |  [31m[1m        242189.1       [0m[0m
      64     x 768   |  [31m[1m         44953.8        [0m[0m  |  [31m[1m                45296.8              [0m[0m  |  [31m[1m                            25758.8                          [0m[0m  |  [31m[1m                   119808.8                  [0m[0m  |  [31m[1m        120235.0       [0m[0m
      32     x 768   |  [31m[1m         22845.8        [0m[0m  |  [31m[1m                22889.3              [0m[0m  |  [31m[1m                             9850.6                          [0m[0m  |  [31m[1m                    60244.0                  [0m[0m  |  [31m[1m         60076.1       [0m[0m
      16     x 768   |  [31m[1m         11369.1        [0m[0m  |  [31m[1m                11292.5              [0m[0m  |  [31m[1m                             4788.4                          [0m[0m  |  [31m[1m                    30659.7                  [0m[0m  |  [31m[1m         30247.8       [0m[0m
      8      x 768   |  [31m[1m          5617.2        [0m[0m  |  [31m[1m                 5603.0              [0m[0m  |  [31m[1m                             2543.5                          [0m[0m  |  [31m[1m                    15113.2                  [0m[0m  |  [31m[1m         15130.4       [0m[0m
      4      x 768   |  [2m[91m          2880.2        [0m[0m  |  [2m[91m                 2836.1              [0m[0m  |  [2m[91m                             1253.8                          [0m[0m  |  [2m[91m                     7654.7                  [0m[0m  |  [2m[91m          7517.3       [0m[0m
      2      x 768   |  [2m[91m          1499.1        [0m[0m  |  [2m[91m                 1458.7              [0m[0m  |                                729.5                            |                       3779.1                    |            3761.8       
      1      x 768   |  [92m[1m           729.1        [0m[0m  |  [92m[1m                  722.7              [0m[0m  |  [92m[1m                              374.5                          [0m[0m  |  [92m[1m                     1920.0                  [0m[0m  |  [92m[1m          1918.2       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        779022.3        [0m[0m  |  [31m[1m               778276.5              [0m[0m  |  [31m[1m                           971494.0                          [0m[0m  |  [31m[1m                  1949836.7                  [0m[0m  |  [31m[1m       1951180.7       [0m[0m
      512    x 768   |  [31m[1m        388527.2        [0m[0m  |  [31m[1m               387530.4              [0m[0m  |  [31m[1m                           492797.3                          [0m[0m  |  [31m[1m                   980354.3                  [0m[0m  |  [31m[1m        985494.7       [0m[0m
      256    x 768   |  [31m[1m        197551.3        [0m[0m  |  [31m[1m               194547.6              [0m[0m  |  [31m[1m                           246209.7                          [0m[0m  |  [31m[1m                   491021.6                  [0m[0m  |  [31m[1m        492356.4       [0m[0m
      128    x 768   |  [31m[1m         96291.6        [0m[0m  |  [31m[1m                98178.8              [0m[0m  |  [31m[1m                           128615.1                          [0m[0m  |  [31m[1m                   242036.9                  [0m[0m  |  [31m[1m        243370.6       [0m[0m
      64     x 768   |  [31m[1m         47876.5        [0m[0m  |  [31m[1m                47845.5              [0m[0m  |  [31m[1m                            68941.4                          [0m[0m  |  [31m[1m                   121066.1                  [0m[0m  |  [31m[1m        119836.5       [0m[0m
      32     x 768   |  [31m[1m         24143.6        [0m[0m  |  [31m[1m                24253.7              [0m[0m  |  [31m[1m                            19587.6                          [0m[0m  |  [31m[1m                    60466.7                  [0m[0m  |  [31m[1m         60202.4       [0m[0m
      16     x 768   |  [31m[1m         11965.8        [0m[0m  |  [31m[1m                11915.5              [0m[0m  |  [31m[1m                             9480.8                          [0m[0m  |  [31m[1m                    34033.6                  [0m[0m  |  [31m[1m         30404.6       [0m[0m
      8      x 768   |  [31m[1m          6023.7        [0m[0m  |  [31m[1m                 6067.5              [0m[0m  |  [31m[1m                             4654.4                          [0m[0m  |  [31m[1m                    15110.0                  [0m[0m  |  [31m[1m         15160.1       [0m[0m
      4      x 768   |  [2m[91m          3051.0        [0m[0m  |  [2m[91m                 3068.3              [0m[0m  |  [2m[91m                             2422.2                          [0m[0m  |  [2m[91m                     7590.0                  [0m[0m  |  [2m[91m          7613.4       [0m[0m
      2      x 768   |            1533.0          |                   1531.5                |                               1242.5                            |                       3757.3                    |            3803.8       
      1      x 768   |  [92m[1m           785.1        [0m[0m  |  [92m[1m                  766.0              [0m[0m  |  [92m[1m                              680.1                          [0m[0m  |  [92m[1m                     1922.2                  [0m[0m  |  [92m[1m          1927.1       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 4 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            84.4            |                   68.6                  |  [31m[1m                            3571.7                           [0m[0m  |                      114.7                      |  [2m[91m         114.6         [0m[0m
      512    x 768   |            83.8            |                   68.4                  |  [31m[1m                            1801.8                           [0m[0m  |                       89.7                      |            69.9         
      256    x 768   |            77.2            |                   57.8                  |  [31m[1m                             907.8                           [0m[0m  |  [92m[1m                     62.0                    [0m[0m  |  [92m[1m          48.9         [0m[0m
      128    x 768   |            66.8            |                   53.0                  |  [31m[1m                             461.5                           [0m[0m  |  [34m[1m                     64.1                    [0m[0m  |  [34m[1m          50.2         [0m[0m
      64     x 768   |            69.8            |                   55.7                  |  [2m[91m                             232.4                           [0m[0m  |                       68.2                      |            54.9         
      32     x 768   |            76.8            |                   63.5                  |                               121.3                             |  [34m[1m                     68.1                    [0m[0m  |  [34m[1m          52.8         [0m[0m
      16     x 768   |            68.1            |                   53.2                  |  [92m[1m                              89.8                           [0m[0m  |  [34m[1m                     67.9                    [0m[0m  |            56.0         
      8      x 768   |            67.8            |                   53.5                  |  [92m[1m                              89.7                           [0m[0m  |                       69.2                      |            55.3         
      4      x 768   |            65.0            |                   51.4                  |  [92m[1m                              89.8                           [0m[0m  |  [34m[1m                     67.5                    [0m[0m  |  [34m[1m          53.7         [0m[0m
      2      x 768   |  [92m[1m          54.0          [0m[0m  |  [92m[1m                 43.8                [0m[0m  |  [92m[1m                              89.3                           [0m[0m  |                       68.4                      |            54.4         
      1      x 768   |  [34m[1m          55.1          [0m[0m  |                   58.3                  |  [34m[1m                              94.7                           [0m[0m  |                       73.0                      |            58.4         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m          66.4          [0m[0m  |                   51.7                  |  [31m[1m                            8371.3                           [0m[0m  |                      116.6                      |  [2m[91m         116.7         [0m[0m
      512    x 768   |  [34m[1m          67.2          [0m[0m  |                   53.2                  |  [31m[1m                            4180.4                           [0m[0m  |                       72.1                      |            69.0         
      256    x 768   |            84.6            |                   67.6                  |  [31m[1m                            2103.5                           [0m[0m  |                       81.6                      |            67.2         
      128    x 768   |            83.3            |                   67.6                  |  [31m[1m                            1061.0                           [0m[0m  |  [34m[1m                     66.8                    [0m[0m  |  [34m[1m          56.6         [0m[0m
      64     x 768   |  [92m[1m          63.5          [0m[0m  |                   51.7                  |  [31m[1m                             535.2                           [0m[0m  |  [92m[1m                     63.9                    [0m[0m  |            71.4         
      32     x 768   |            83.4            |                   67.9                  |  [2m[91m                             270.1                           [0m[0m  |  [34m[1m                     64.9                    [0m[0m  |            68.1         
      16     x 768   |            88.4            |                   71.0                  |                               141.1                             |                       87.8                      |            71.7         
      8      x 768   |            88.9            |                   70.9                  |                               116.0                             |                       87.0                      |            70.8         
      4      x 768   |            88.0            |                   71.3                  |                               115.3                             |                       86.3                      |            71.4         
      2      x 768   |            73.7            |                   57.1                  |                               114.7                             |                       86.0                      |            71.0         
      1      x 768   |            72.5            |  [92m[1m                 40.9                [0m[0m  |  [92m[1m                              89.2                           [0m[0m  |  [34m[1m                     68.7                    [0m[0m  |  [92m[1m          55.4         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        733586.3        [0m[0m  |  [31m[1m               726285.8              [0m[0m  |  [31m[1m                           63277.1                           [0m[0m  |  [31m[1m                  1949363.3                  [0m[0m  |  [31m[1m       1956342.1       [0m[0m
      512    x 768   |  [31m[1m        363700.6        [0m[0m  |  [31m[1m               362706.1              [0m[0m  |  [31m[1m                           31716.4                           [0m[0m  |  [31m[1m                   980068.1                  [0m[0m  |  [31m[1m        976884.6       [0m[0m
      256    x 768   |  [31m[1m        180758.7        [0m[0m  |  [31m[1m               180104.5              [0m[0m  |  [31m[1m                           15928.2                           [0m[0m  |  [31m[1m                   484239.4                  [0m[0m  |  [31m[1m        483562.0       [0m[0m
      128    x 768   |  [31m[1m         89172.2        [0m[0m  |  [31m[1m                89266.8              [0m[0m  |  [31m[1m                            8104.3                           [0m[0m  |  [31m[1m                   241681.9                  [0m[0m  |  [31m[1m        241791.6       [0m[0m
      64     x 768   |  [31m[1m         44937.2        [0m[0m  |  [31m[1m                45005.2              [0m[0m  |  [31m[1m                            4225.9                           [0m[0m  |  [31m[1m                   120257.7                  [0m[0m  |  [31m[1m        119853.8       [0m[0m
      32     x 768   |  [31m[1m         22915.0        [0m[0m  |  [31m[1m                22673.4              [0m[0m  |  [31m[1m                            2191.4                           [0m[0m  |  [31m[1m                    60208.4                  [0m[0m  |  [31m[1m         60167.4       [0m[0m
      16     x 768   |  [31m[1m         11262.8        [0m[0m  |  [31m[1m                11146.6              [0m[0m  |  [31m[1m                            1139.4                           [0m[0m  |  [31m[1m                    30239.7                  [0m[0m  |  [31m[1m         30307.0       [0m[0m
      8      x 768   |  [31m[1m          5665.7        [0m[0m  |  [31m[1m                 5576.7              [0m[0m  |  [2m[91m                             633.5                           [0m[0m  |  [31m[1m                    15006.0                  [0m[0m  |  [31m[1m         14916.9       [0m[0m
      4      x 768   |  [2m[91m          2886.6        [0m[0m  |  [2m[91m                 2806.2              [0m[0m  |  [2m[91m                             357.3                           [0m[0m  |  [2m[91m                     7635.3                  [0m[0m  |  [2m[91m          7515.5       [0m[0m
      2      x 768   |            1474.8          |                   1416.8                |                               227.6                             |                       3796.4                    |  [2m[91m          3798.0       [0m[0m
      1      x 768   |  [92m[1m           789.7        [0m[0m  |  [92m[1m                  729.0              [0m[0m  |  [92m[1m                             155.4                           [0m[0m  |  [92m[1m                     1922.4                  [0m[0m  |  [92m[1m          1891.9       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        768804.6        [0m[0m  |  [31m[1m               767164.1              [0m[0m  |  [31m[1m                           125250.9                          [0m[0m  |  [31m[1m                  1935496.3                  [0m[0m  |  [31m[1m       1940739.5       [0m[0m
      512    x 768   |  [31m[1m        386912.2        [0m[0m  |  [31m[1m               386610.0              [0m[0m  |  [31m[1m                            62846.9                          [0m[0m  |  [31m[1m                   971713.9                  [0m[0m  |  [31m[1m        969975.4       [0m[0m
      256    x 768   |  [31m[1m        193732.4        [0m[0m  |  [31m[1m               192452.3              [0m[0m  |  [31m[1m                            31527.7                          [0m[0m  |  [31m[1m                   485222.7                  [0m[0m  |  [31m[1m        483447.9       [0m[0m
      128    x 768   |  [31m[1m         96442.0        [0m[0m  |  [31m[1m                95425.8              [0m[0m  |  [31m[1m                            15882.6                          [0m[0m  |  [31m[1m                   243649.4                  [0m[0m  |  [31m[1m        241204.2       [0m[0m
      64     x 768   |  [31m[1m         48003.5        [0m[0m  |  [31m[1m                48285.9              [0m[0m  |  [31m[1m                             8209.6                          [0m[0m  |  [31m[1m                   119913.8                  [0m[0m  |  [31m[1m        119742.6       [0m[0m
      32     x 768   |  [31m[1m         24380.2        [0m[0m  |  [31m[1m                23953.1              [0m[0m  |  [31m[1m                             4152.2                          [0m[0m  |  [31m[1m                    60053.7                  [0m[0m  |  [31m[1m         61678.1       [0m[0m
      16     x 768   |  [31m[1m         12040.5        [0m[0m  |  [31m[1m                11867.5              [0m[0m  |  [31m[1m                             2115.6                          [0m[0m  |  [31m[1m                    30623.7                  [0m[0m  |  [31m[1m         30528.6       [0m[0m
      8      x 768   |  [31m[1m          6049.6        [0m[0m  |  [31m[1m                 5972.3              [0m[0m  |  [31m[1m                             1093.0                          [0m[0m  |  [31m[1m                    14959.5                  [0m[0m  |  [31m[1m         14888.1       [0m[0m
      4      x 768   |  [2m[91m          3087.4        [0m[0m  |  [2m[91m                 2999.8              [0m[0m  |  [2m[91m                              608.9                          [0m[0m  |  [2m[91m                     7573.9                  [0m[0m  |  [2m[91m          7682.1       [0m[0m
      2      x 768   |            1590.2          |                   1547.7                |                                371.0                            |                       3857.6                    |            3771.0       
      1      x 768   |  [92m[1m           834.4        [0m[0m  |  [92m[1m                  780.5              [0m[0m  |  [92m[1m                              215.4                          [0m[0m  |  [92m[1m                     1933.6                  [0m[0m  |  [92m[1m          1908.6       [0m[0m

Times are in microseconds (us).
/home/user/build/.venv/lib/python3.10/site-packages/torch/jit/_script.py:1241: UserWarning: `optimize` is deprecated and has no effect. Use `with torch.jit.optimized_execution() instead
  warnings.warn(

Benchmarking batch size 1024 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 4 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m         105.4          [0m[0m  |                   54.8                  |  [31m[1m                            1770.8                           [0m[0m  |                      114.6                      |  [2m[91m         114.7         [0m[0m
      512    x 768   |  [34m[1m         106.1          [0m[0m  |                   52.8                  |  [31m[1m                             909.3                           [0m[0m  |  [34m[1m                     89.7                    [0m[0m  |            58.6         
      256    x 768   |  [92m[1m         104.2          [0m[0m  |                   53.4                  |  [2m[91m                             457.4                           [0m[0m  |  [92m[1m                     86.8                    [0m[0m  |  [92m[1m          50.1         [0m[0m
      128    x 768   |  [34m[1m         106.0          [0m[0m  |                   54.6                  |  [2m[91m                             234.4                           [0m[0m  |  [34m[1m                     88.7                    [0m[0m  |  [34m[1m          51.2         [0m[0m
      64     x 768   |  [34m[1m         107.8          [0m[0m  |                   53.9                  |                               133.9                             |  [34m[1m                     89.9                    [0m[0m  |  [34m[1m          51.4         [0m[0m
      32     x 768   |  [34m[1m         112.9          [0m[0m  |                   59.4                  |  [34m[1m                             113.9                           [0m[0m  |                       95.6                      |            55.1         
      16     x 768   |  [34m[1m         111.2          [0m[0m  |                   57.9                  |  [34m[1m                             111.8                           [0m[0m  |                       98.7                      |            58.8         
      8      x 768   |  [34m[1m         110.1          [0m[0m  |                   58.4                  |  [34m[1m                             110.7                           [0m[0m  |                       97.2                      |            58.5         
      4      x 768   |  [34m[1m         111.9          [0m[0m  |                   56.6                  |  [34m[1m                             111.6                           [0m[0m  |                       97.6                      |            57.7         
      2      x 768   |  [34m[1m         111.1          [0m[0m  |  [34m[1m                 43.3                [0m[0m  |  [92m[1m                             104.6                           [0m[0m  |  [34m[1m                     91.2                    [0m[0m  |  [34m[1m          54.6         [0m[0m
      1      x 768   |  [92m[1m         104.0          [0m[0m  |  [92m[1m                 40.9                [0m[0m  |  [92m[1m                             104.8                           [0m[0m  |  [34m[1m                     92.0                    [0m[0m  |  [34m[1m          54.3         [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 4 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
4 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m         105.3          [0m[0m  |                   48.9                  |  [31m[1m                            3572.0                           [0m[0m  |                      116.1                      |  [2m[91m         116.4         [0m[0m
      512    x 768   |  [92m[1m         103.2          [0m[0m  |                   49.2                  |  [31m[1m                            1803.9                           [0m[0m  |                       95.8                      |            59.2         
      256    x 768   |  [34m[1m         104.9          [0m[0m  |                   51.6                  |  [31m[1m                             903.2                           [0m[0m  |  [92m[1m                     86.1                    [0m[0m  |  [92m[1m          49.5         [0m[0m
      128    x 768   |  [34m[1m         104.2          [0m[0m  |                   51.4                  |  [2m[91m                             456.4                           [0m[0m  |  [92m[1m                     86.4                    [0m[0m  |  [34m[1m          50.0         [0m[0m
      64     x 768   |           125.4            |                   68.2                  |  [2m[91m                             230.2                           [0m[0m  |                      104.3                      |            67.2         
      32     x 768   |           126.1            |                   68.5                  |                               127.8                             |                      105.9                      |            67.9         
      16     x 768   |           125.9            |                   72.9                  |                               125.9                             |                      108.8                      |            72.2         
      8      x 768   |           128.6            |                   59.3                  |  [34m[1m                             112.4                           [0m[0m  |                       98.3                      |            60.3         
      4      x 768   |           130.5            |                   70.8                  |                               125.9                             |                      107.8                      |            71.1         
      2      x 768   |           125.4            |                   57.1                  |                               126.9                             |                      110.5                      |            71.2         
      1      x 768   |           125.3            |  [92m[1m                 40.7                [0m[0m  |  [92m[1m                             103.6                           [0m[0m  |  [34m[1m                     91.6                    [0m[0m  |  [34m[1m          53.7         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 8 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1135876.8        [0m[0m  |  [31m[1m               727294.6              [0m[0m  |  [31m[1m                           290283.8                          [0m[0m  |  [31m[1m                  2832968.7                  [0m[0m  |  [31m[1m       1964140.6       [0m[0m
      512    x 768   |  [31m[1m        575605.5        [0m[0m  |  [31m[1m               362241.6              [0m[0m  |  [31m[1m                           145274.9                          [0m[0m  |  [31m[1m                  1438271.9                  [0m[0m  |  [31m[1m        979953.8       [0m[0m
      256    x 768   |  [31m[1m        280658.0        [0m[0m  |  [31m[1m               186237.0              [0m[0m  |  [31m[1m                            75026.1                          [0m[0m  |  [31m[1m                   715681.9                  [0m[0m  |  [31m[1m        494948.5       [0m[0m
      128    x 768   |  [31m[1m        144319.1        [0m[0m  |  [31m[1m                91482.8              [0m[0m  |  [31m[1m                            40586.2                          [0m[0m  |  [31m[1m                   359637.8                  [0m[0m  |  [31m[1m        242147.2       [0m[0m
      64     x 768   |  [31m[1m         72165.2        [0m[0m  |  [31m[1m                45609.1              [0m[0m  |  [31m[1m                            14968.8                          [0m[0m  |  [31m[1m                   178283.2                  [0m[0m  |  [31m[1m        121753.8       [0m[0m
      32     x 768   |  [31m[1m         36608.4        [0m[0m  |  [31m[1m                23180.1              [0m[0m  |  [31m[1m                             5732.0                          [0m[0m  |  [31m[1m                    91177.0                  [0m[0m  |  [31m[1m         61110.5       [0m[0m
      16     x 768   |  [31m[1m         17708.3        [0m[0m  |  [31m[1m                11189.8              [0m[0m  |  [31m[1m                             2677.8                          [0m[0m  |  [31m[1m                    45014.6                  [0m[0m  |  [31m[1m         30682.6       [0m[0m
      8      x 768   |  [31m[1m          8866.7        [0m[0m  |  [31m[1m                 5633.5              [0m[0m  |  [31m[1m                             1362.0                          [0m[0m  |  [31m[1m                    22186.7                  [0m[0m  |  [31m[1m         15651.1       [0m[0m
      4      x 768   |  [2m[91m          4436.3        [0m[0m  |  [2m[91m                 2872.7              [0m[0m  |  [2m[91m                              743.3                          [0m[0m  |  [2m[91m                    11210.2                  [0m[0m  |  [2m[91m          7652.3       [0m[0m
      2      x 768   |            2213.1          |                   1434.4                |                                421.8                            |                       5630.1                    |            3795.3       
      1      x 768   |  [92m[1m          1162.8        [0m[0m  |  [92m[1m                  756.0              [0m[0m  |  [92m[1m                              233.7                          [0m[0m  |  [92m[1m                     2996.5                  [0m[0m  |  [92m[1m          1959.5       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1127631.7        [0m[0m  |  [31m[1m               780909.6              [0m[0m  |  [31m[1m                           574834.7                          [0m[0m  |  [31m[1m                  2841509.2                  [0m[0m  |  [31m[1m       2001197.9       [0m[0m
      512    x 768   |  [31m[1m        577161.0        [0m[0m  |  [31m[1m               388966.1              [0m[0m  |  [31m[1m                           312645.2                          [0m[0m  |  [31m[1m                  1414812.2                  [0m[0m  |  [31m[1m       1001278.9       [0m[0m
      256    x 768   |  [31m[1m        282397.7        [0m[0m  |  [31m[1m               199766.0              [0m[0m  |  [31m[1m                           145321.4                          [0m[0m  |  [31m[1m                   715833.2                  [0m[0m  |  [31m[1m        485310.2       [0m[0m
      128    x 768   |  [31m[1m        140272.1        [0m[0m  |  [31m[1m                96429.8              [0m[0m  |  [31m[1m                            75444.8                          [0m[0m  |  [31m[1m                   353400.7                  [0m[0m  |  [31m[1m        241506.7       [0m[0m
      64     x 768   |  [31m[1m         70622.8        [0m[0m  |  [31m[1m                48430.1              [0m[0m  |  [31m[1m                            41861.0                          [0m[0m  |  [31m[1m                   176684.6                  [0m[0m  |  [31m[1m        121140.2       [0m[0m
      32     x 768   |  [31m[1m         35897.3        [0m[0m  |  [31m[1m                24364.0              [0m[0m  |  [31m[1m                            11050.8                          [0m[0m  |  [31m[1m                    91049.3                  [0m[0m  |  [31m[1m         61448.3       [0m[0m
      16     x 768   |  [31m[1m         17839.8        [0m[0m  |  [31m[1m                12329.0              [0m[0m  |  [31m[1m                             5193.8                          [0m[0m  |  [31m[1m                    45458.0                  [0m[0m  |  [31m[1m         30984.8       [0m[0m
      8      x 768   |  [31m[1m          8603.5        [0m[0m  |  [31m[1m                 5995.1              [0m[0m  |  [31m[1m                             2577.6                          [0m[0m  |  [31m[1m                    23959.3                  [0m[0m  |  [31m[1m         16295.3       [0m[0m
      4      x 768   |  [2m[91m          4477.8        [0m[0m  |  [2m[91m                 3015.9              [0m[0m  |  [2m[91m                             1348.2                          [0m[0m  |  [2m[91m                    11663.4                  [0m[0m  |  [2m[91m          7933.1       [0m[0m
      2      x 768   |  [2m[91m          2315.4        [0m[0m  |                   1562.0                |                                744.2                            |  [2m[91m                     5719.1                  [0m[0m  |  [2m[91m          4143.7       [0m[0m
      1      x 768   |  [92m[1m          1140.8        [0m[0m  |  [92m[1m                  788.5              [0m[0m  |  [92m[1m                              411.8                          [0m[0m  |  [92m[1m                     2818.0                  [0m[0m  |  [92m[1m          1907.2       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 8 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 8 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            79.8            |                   69.2                  |  [31m[1m                            3582.1                           [0m[0m  |  [2m[91m                    112.9                    [0m[0m  |  [2m[91m         114.7         [0m[0m
      512    x 768   |            55.8            |                   53.5                  |  [31m[1m                            1813.8                           [0m[0m  |                       68.3                      |            58.6         
      256    x 768   |            60.6            |                   69.5                  |  [31m[1m                             901.8                           [0m[0m  |                       67.8                      |            65.4         
      128    x 768   |            77.6            |                   69.9                  |  [31m[1m                             460.1                           [0m[0m  |                       68.9                      |            65.1         
      64     x 768   |            76.6            |                   54.5                  |  [2m[91m                             231.7                           [0m[0m  |  [34m[1m                     51.0                    [0m[0m  |  [92m[1m          50.2         [0m[0m
      32     x 768   |            55.6            |                   52.4                  |                               120.8                             |  [92m[1m                     49.3                    [0m[0m  |  [92m[1m          50.2         [0m[0m
      16     x 768   |  [34m[1m          50.4          [0m[0m  |                   53.8                  |  [34m[1m                              80.7                           [0m[0m  |  [34m[1m                     50.1                    [0m[0m  |  [34m[1m          54.4         [0m[0m
      8      x 768   |  [34m[1m          51.2          [0m[0m  |                   52.7                  |  [34m[1m                              83.1                           [0m[0m  |  [92m[1m                     49.5                    [0m[0m  |  [34m[1m          54.4         [0m[0m
      4      x 768   |  [34m[1m          50.6          [0m[0m  |                   51.2                  |  [92m[1m                              79.8                           [0m[0m  |  [92m[1m                     49.7                    [0m[0m  |  [34m[1m          54.5         [0m[0m
      2      x 768   |  [34m[1m          48.5          [0m[0m  |  [92m[1m                 39.9                [0m[0m  |  [92m[1m                              80.4                           [0m[0m  |  [34m[1m                     50.5                    [0m[0m  |  [34m[1m          55.0         [0m[0m
      1      x 768   |  [92m[1m          47.4          [0m[0m  |  [34m[1m                 40.4                [0m[0m  |  [34m[1m                              80.8                           [0m[0m  |  [34m[1m                     51.0                    [0m[0m  |            56.2         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m          50.9          [0m[0m  |                   69.0                  |  [31m[1m                            8359.1                           [0m[0m  |  [2m[91m                    114.8                    [0m[0m  |  [2m[91m         116.6         [0m[0m
      512    x 768   |            68.1            |                   50.4                  |  [31m[1m                            4203.9                           [0m[0m  |                       70.3                      |            67.5         
      256    x 768   |            71.1            |                   66.2                  |  [31m[1m                            2112.2                           [0m[0m  |                       67.5                      |            66.2         
      128    x 768   |            73.4            |                   66.3                  |  [31m[1m                            1060.9                           [0m[0m  |                       69.6                      |            65.5         
      64     x 768   |            72.1            |                   67.0                  |  [31m[1m                             535.0                           [0m[0m  |  [34m[1m                     52.2                    [0m[0m  |  [92m[1m          51.1         [0m[0m
      32     x 768   |            59.0            |                   53.0                  |  [2m[91m                             270.8                           [0m[0m  |  [34m[1m                     51.6                    [0m[0m  |  [34m[1m          55.9         [0m[0m
      16     x 768   |            77.5            |                   70.9                  |                               141.3                             |                       70.1                      |            70.5         
      8      x 768   |            77.8            |                   70.5                  |                               106.3                             |                       70.9                      |  [34m[1m          53.7         [0m[0m
      4      x 768   |            55.5            |                   53.1                  |  [92m[1m                              80.2                           [0m[0m  |                       71.7                      |            70.2         
      2      x 768   |  [34m[1m          51.0          [0m[0m  |  [92m[1m                 40.7                [0m[0m  |  [92m[1m                              80.4                           [0m[0m  |  [92m[1m                     49.3                    [0m[0m  |            70.3         
      1      x 768   |  [92m[1m          46.7          [0m[0m  |                   55.8                  |                               103.3                             |  [34m[1m                     50.7                    [0m[0m  |            57.3         

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        734077.3        [0m[0m  |  [31m[1m               730156.2              [0m[0m  |  [31m[1m                           285742.6                          [0m[0m  |  [31m[1m                  1951150.3                  [0m[0m  |  [31m[1m       1959865.5       [0m[0m
      512    x 768   |  [31m[1m        361711.6        [0m[0m  |  [31m[1m               361322.0              [0m[0m  |  [31m[1m                           144294.2                          [0m[0m  |  [31m[1m                   976741.3                  [0m[0m  |  [31m[1m        975770.8       [0m[0m
      256    x 768   |  [31m[1m        182028.9        [0m[0m  |  [31m[1m               181905.1              [0m[0m  |  [31m[1m                            79182.4                          [0m[0m  |  [31m[1m                   495511.3                  [0m[0m  |  [31m[1m        485065.9       [0m[0m
      128    x 768   |  [31m[1m         90277.5        [0m[0m  |  [31m[1m                91465.8              [0m[0m  |  [31m[1m                            40976.5                          [0m[0m  |  [31m[1m                   244049.2                  [0m[0m  |  [31m[1m        242966.4       [0m[0m
      64     x 768   |  [31m[1m         45500.2        [0m[0m  |  [31m[1m                45464.0              [0m[0m  |  [31m[1m                            14879.8                          [0m[0m  |  [31m[1m                   123367.5                  [0m[0m  |  [31m[1m        120010.1       [0m[0m
      32     x 768   |  [31m[1m         22896.8        [0m[0m  |  [31m[1m                22818.3              [0m[0m  |  [31m[1m                             5241.6                          [0m[0m  |  [31m[1m                    60819.0                  [0m[0m  |  [31m[1m         62612.4       [0m[0m
      16     x 768   |  [31m[1m         11272.5        [0m[0m  |  [31m[1m                11278.5              [0m[0m  |  [31m[1m                             2608.6                          [0m[0m  |  [31m[1m                    30509.8                  [0m[0m  |  [31m[1m         30441.5       [0m[0m
      8      x 768   |  [31m[1m          5622.6        [0m[0m  |  [31m[1m                 5613.8              [0m[0m  |  [31m[1m                             1465.0                          [0m[0m  |  [31m[1m                    15422.5                  [0m[0m  |  [31m[1m         15428.9       [0m[0m
      4      x 768   |  [2m[91m          2854.5        [0m[0m  |  [2m[91m                 2831.1              [0m[0m  |  [2m[91m                              728.3                          [0m[0m  |  [2m[91m                     7554.4                  [0m[0m  |  [2m[91m          7582.7       [0m[0m
      2      x 768   |            1434.4          |                   1425.1                |                                410.4                            |  [2m[91m                     3844.9                  [0m[0m  |            3755.7       
      1      x 768   |  [92m[1m           737.9        [0m[0m  |  [92m[1m                  725.1              [0m[0m  |  [92m[1m                              249.6                          [0m[0m  |  [92m[1m                     1898.2                  [0m[0m  |  [92m[1m          1911.9       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        775355.4        [0m[0m  |  [31m[1m               769042.5              [0m[0m  |  [31m[1m                           581032.1                          [0m[0m  |  [31m[1m                  1956952.5                  [0m[0m  |  [31m[1m       1960174.3       [0m[0m
      512    x 768   |  [31m[1m        388364.6        [0m[0m  |  [31m[1m               390096.8              [0m[0m  |  [31m[1m                           305431.6                          [0m[0m  |  [31m[1m                   984116.3                  [0m[0m  |  [31m[1m        975930.1       [0m[0m
      256    x 768   |  [31m[1m        193857.1        [0m[0m  |  [31m[1m               194393.6              [0m[0m  |  [31m[1m                           149125.0                          [0m[0m  |  [31m[1m                   502211.9                  [0m[0m  |  [31m[1m        485802.5       [0m[0m
      128    x 768   |  [31m[1m         95958.3        [0m[0m  |  [31m[1m                96486.4              [0m[0m  |  [31m[1m                            77143.0                          [0m[0m  |  [31m[1m                   244331.0                  [0m[0m  |  [31m[1m        241068.2       [0m[0m
      64     x 768   |  [31m[1m         50139.0        [0m[0m  |  [31m[1m                48286.8              [0m[0m  |  [31m[1m                            40404.2                          [0m[0m  |  [31m[1m                   123358.2                  [0m[0m  |  [31m[1m        120631.5       [0m[0m
      32     x 768   |  [31m[1m         24723.3        [0m[0m  |  [31m[1m                24371.6              [0m[0m  |  [31m[1m                            12980.8                          [0m[0m  |  [31m[1m                    61547.1                  [0m[0m  |  [31m[1m         60945.6       [0m[0m
      16     x 768   |  [31m[1m         11958.6        [0m[0m  |  [31m[1m                12004.4              [0m[0m  |  [31m[1m                             5022.8                          [0m[0m  |  [31m[1m                    31655.6                  [0m[0m  |  [31m[1m         30433.4       [0m[0m
      8      x 768   |  [31m[1m          5999.5        [0m[0m  |  [31m[1m                 5991.3              [0m[0m  |  [31m[1m                             2575.4                          [0m[0m  |  [31m[1m                    14974.7                  [0m[0m  |  [31m[1m         15157.3       [0m[0m
      4      x 768   |  [2m[91m          3005.3        [0m[0m  |  [2m[91m                 2997.6              [0m[0m  |  [2m[91m                             1318.1                          [0m[0m  |  [2m[91m                     7548.8                  [0m[0m  |  [2m[91m          7506.1       [0m[0m
      2      x 768   |            1526.2          |                   1519.8                |                                730.8                            |                       3771.3                    |            3820.8       
      1      x 768   |  [92m[1m           789.5        [0m[0m  |  [92m[1m                  778.6              [0m[0m  |  [92m[1m                              442.7                          [0m[0m  |  [92m[1m                     1922.9                  [0m[0m  |  [92m[1m          1914.7       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 8 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m          69.9          [0m[0m  |  [34m[1m                 55.4                [0m[0m  |  [31m[1m                            3577.9                           [0m[0m  |                      115.3                      |  [2m[91m         114.8         [0m[0m
      512    x 768   |  [34m[1m          71.7          [0m[0m  |  [34m[1m                 56.1                [0m[0m  |  [31m[1m                            1813.7                           [0m[0m  |  [34m[1m                     68.5                    [0m[0m  |            59.2         
      256    x 768   |  [92m[1m          67.2          [0m[0m  |  [92m[1m                 53.7                [0m[0m  |  [31m[1m                             912.0                           [0m[0m  |  [92m[1m                     63.0                    [0m[0m  |  [92m[1m          49.3         [0m[0m
      128    x 768   |  [92m[1m          67.4          [0m[0m  |  [92m[1m                 53.6                [0m[0m  |  [2m[91m                             468.6                           [0m[0m  |  [92m[1m                     63.0                    [0m[0m  |            55.6         
      64     x 768   |  [34m[1m          71.8          [0m[0m  |  [34m[1m                 55.9                [0m[0m  |  [2m[91m                             234.9                           [0m[0m  |  [34m[1m                     68.7                    [0m[0m  |  [34m[1m          53.8         [0m[0m
      32     x 768   |  [34m[1m          72.3          [0m[0m  |  [34m[1m                 56.9                [0m[0m  |                               121.1                             |  [34m[1m                     68.8                    [0m[0m  |            54.7         
      16     x 768   |  [34m[1m          73.1          [0m[0m  |  [34m[1m                 58.0                [0m[0m  |  [34m[1m                              96.4                           [0m[0m  |                       72.3                      |            58.5         
      8      x 768   |  [34m[1m          71.7          [0m[0m  |  [34m[1m                 57.6                [0m[0m  |  [92m[1m                              95.1                           [0m[0m  |                       71.8                      |            69.9         
      4      x 768   |            83.6            |                   67.4                  |                               114.2                             |                       87.0                      |            71.1         
      2      x 768   |  [34m[1m          71.5          [0m[0m  |  [34m[1m                 54.8                [0m[0m  |                               115.8                             |                       86.2                      |            71.0         
      1      x 768   |  [34m[1m          72.3          [0m[0m  |  [34m[1m                 54.8                [0m[0m  |                               113.4                             |                       86.1                      |            70.6         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            80.2            |                   65.3                  |  [31m[1m                            8368.2                           [0m[0m  |                      116.2                      |  [2m[91m         116.2         [0m[0m
      512    x 768   |            62.5            |                   49.1                  |  [31m[1m                            4192.1                           [0m[0m  |  [34m[1m                     65.5                    [0m[0m  |            59.2         
      256    x 768   |            63.9            |                   68.2                  |  [31m[1m                            2106.1                           [0m[0m  |  [92m[1m                     61.3                    [0m[0m  |            65.5         
      128    x 768   |            67.3            |                   67.3                  |  [31m[1m                            1060.3                           [0m[0m  |                       80.3                      |            65.4         
      64     x 768   |            82.4            |                   67.2                  |  [31m[1m                             535.5                           [0m[0m  |                       81.8                      |  [34m[1m          52.1         [0m[0m
      32     x 768   |            64.9            |                   50.8                  |  [2m[91m                             269.6                           [0m[0m  |                       68.1                      |  [92m[1m          51.4         [0m[0m
      16     x 768   |            66.8            |                   74.2                  |                               140.8                             |  [34m[1m                     66.9                    [0m[0m  |            71.2         
      8      x 768   |            88.1            |                   71.1                  |                               114.7                             |                       87.0                      |            71.3         
      4      x 768   |            87.3            |                   71.2                  |                               113.9                             |                       71.2                      |  [34m[1m          56.4         [0m[0m
      2      x 768   |  [34m[1m          59.1          [0m[0m  |  [34m[1m                 43.7                [0m[0m  |  [34m[1m                              94.8                           [0m[0m  |                       71.5                      |  [34m[1m          56.2         [0m[0m
      1      x 768   |  [92m[1m          54.3          [0m[0m  |  [92m[1m                 40.9                [0m[0m  |  [92m[1m                              88.6                           [0m[0m  |                       68.2                      |  [34m[1m          54.7         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        745567.9        [0m[0m  |  [31m[1m               731023.7              [0m[0m  |  [31m[1m                           63257.9                           [0m[0m  |  [31m[1m                  1954402.0                  [0m[0m  |  [31m[1m       1956446.3       [0m[0m
      512    x 768   |  [31m[1m        363982.6        [0m[0m  |  [31m[1m               361955.6              [0m[0m  |  [31m[1m                           31890.9                           [0m[0m  |  [31m[1m                   978010.0                  [0m[0m  |  [31m[1m        979115.5       [0m[0m
      256    x 768   |  [31m[1m        181191.4        [0m[0m  |  [31m[1m               181262.5              [0m[0m  |  [31m[1m                           15967.8                           [0m[0m  |  [31m[1m                   486964.4                  [0m[0m  |  [31m[1m        503685.1       [0m[0m
      128    x 768   |  [31m[1m         90242.0        [0m[0m  |  [31m[1m                91376.8              [0m[0m  |  [31m[1m                            8076.8                           [0m[0m  |  [31m[1m                   242792.4                  [0m[0m  |  [31m[1m        242220.8       [0m[0m
      64     x 768   |  [31m[1m         46167.4        [0m[0m  |  [31m[1m                45743.9              [0m[0m  |  [31m[1m                            4238.5                           [0m[0m  |  [31m[1m                   120855.7                  [0m[0m  |  [31m[1m        119993.3       [0m[0m
      32     x 768   |  [31m[1m         23036.1        [0m[0m  |  [31m[1m                22910.7              [0m[0m  |  [31m[1m                            2168.1                           [0m[0m  |  [31m[1m                    60426.0                  [0m[0m  |  [31m[1m         60207.2       [0m[0m
      16     x 768   |  [31m[1m         11209.9        [0m[0m  |  [31m[1m                11496.3              [0m[0m  |  [31m[1m                            1134.3                           [0m[0m  |  [31m[1m                    30586.0                  [0m[0m  |  [31m[1m         30642.1       [0m[0m
      8      x 768   |  [31m[1m          5685.5        [0m[0m  |  [31m[1m                 5613.2              [0m[0m  |  [2m[91m                             607.1                           [0m[0m  |  [31m[1m                    15198.6                  [0m[0m  |  [31m[1m         14980.1       [0m[0m
      4      x 768   |  [2m[91m          2890.3        [0m[0m  |  [2m[91m                 2808.4              [0m[0m  |  [2m[91m                             345.8                           [0m[0m  |  [2m[91m                     7585.8                  [0m[0m  |  [2m[91m          7551.0       [0m[0m
      2      x 768   |            1484.5          |                   1449.5                |                               221.8                             |  [2m[91m                     3982.4                  [0m[0m  |  [2m[91m          3901.2       [0m[0m
      1      x 768   |  [92m[1m           801.9        [0m[0m  |  [92m[1m                  736.8              [0m[0m  |  [92m[1m                             154.8                           [0m[0m  |  [92m[1m                     1929.9                  [0m[0m  |  [92m[1m          1895.6       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        776355.5        [0m[0m  |  [31m[1m               774768.3              [0m[0m  |  [31m[1m                           125367.8                          [0m[0m  |  [31m[1m                  1949051.9                  [0m[0m  |  [31m[1m       1948354.3       [0m[0m
      512    x 768   |  [31m[1m        388300.8        [0m[0m  |  [31m[1m               385629.1              [0m[0m  |  [31m[1m                            63058.4                          [0m[0m  |  [31m[1m                   974214.2                  [0m[0m  |  [31m[1m       1000203.3       [0m[0m
      256    x 768   |  [31m[1m        194153.8        [0m[0m  |  [31m[1m               192546.2              [0m[0m  |  [31m[1m                            31621.1                          [0m[0m  |  [31m[1m                   495644.8                  [0m[0m  |  [31m[1m        503702.3       [0m[0m
      128    x 768   |  [31m[1m         97523.7        [0m[0m  |  [31m[1m                96692.7              [0m[0m  |  [31m[1m                            15893.8                          [0m[0m  |  [31m[1m                   242201.2                  [0m[0m  |  [31m[1m        241445.2       [0m[0m
      64     x 768   |  [31m[1m         48261.3        [0m[0m  |  [31m[1m                48276.7              [0m[0m  |  [31m[1m                             8191.8                          [0m[0m  |  [31m[1m                   120032.4                  [0m[0m  |  [31m[1m        119741.6       [0m[0m
      32     x 768   |  [31m[1m         24458.2        [0m[0m  |  [31m[1m                24304.0              [0m[0m  |  [31m[1m                             4107.5                          [0m[0m  |  [31m[1m                    60161.7                  [0m[0m  |  [31m[1m         60255.2       [0m[0m
      16     x 768   |  [31m[1m         12069.8        [0m[0m  |  [31m[1m                11981.2              [0m[0m  |  [31m[1m                             2113.3                          [0m[0m  |  [31m[1m                    30440.1                  [0m[0m  |  [31m[1m         30448.0       [0m[0m
      8      x 768   |  [31m[1m          6037.6        [0m[0m  |  [31m[1m                 5995.5              [0m[0m  |  [2m[91m                             1095.3                          [0m[0m  |  [31m[1m                    15439.7                  [0m[0m  |  [31m[1m         14966.4       [0m[0m
      4      x 768   |  [2m[91m          3082.1        [0m[0m  |  [2m[91m                 3004.9              [0m[0m  |  [2m[91m                              595.1                          [0m[0m  |  [2m[91m                     7703.8                  [0m[0m  |  [2m[91m          7627.7       [0m[0m
      2      x 768   |            1623.1          |                   1521.7                |                                341.7                            |                       3822.5                    |            3782.6       
      1      x 768   |  [92m[1m           841.3        [0m[0m  |  [92m[1m                  770.3              [0m[0m  |  [92m[1m                              221.9                          [0m[0m  |  [92m[1m                     1955.2                  [0m[0m  |  [92m[1m          1894.1       [0m[0m

Times are in microseconds (us).
/home/user/build/.venv/lib/python3.10/site-packages/torch/jit/_script.py:1241: UserWarning: `optimize` is deprecated and has no effect. Use `with torch.jit.optimized_execution() instead
  warnings.warn(

Benchmarking batch size 1024 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 8 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------- Condensed Linear @ 90 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m         109.0          [0m[0m  |                   56.0                  |  [31m[1m                            1769.6                           [0m[0m  |                      114.6                      |  [2m[91m         114.6         [0m[0m
      512    x 768   |           126.2            |                   53.4                  |  [31m[1m                             901.5                           [0m[0m  |  [92m[1m                     90.1                    [0m[0m  |            58.7         
      256    x 768   |  [34m[1m         111.6          [0m[0m  |                   56.3                  |  [2m[91m                             466.1                           [0m[0m  |                      104.2                      |  [92m[1m          51.5         [0m[0m
      128    x 768   |  [34m[1m         109.5          [0m[0m  |                   56.7                  |  [2m[91m                             235.3                           [0m[0m  |  [34m[1m                     91.6                    [0m[0m  |  [92m[1m          51.9         [0m[0m
      64     x 768   |  [34m[1m         109.5          [0m[0m  |                   69.0                  |                               134.2                             |                       99.8                      |            66.6         
      32     x 768   |           125.2            |                   72.5                  |                               126.8                             |                      107.3                      |  [34m[1m          52.1         [0m[0m
      16     x 768   |  [34m[1m         105.7          [0m[0m  |                   57.4                  |  [34m[1m                             105.8                           [0m[0m  |  [34m[1m                     91.9                    [0m[0m  |  [34m[1m          55.0         [0m[0m
      8      x 768   |  [92m[1m         103.7          [0m[0m  |                   56.4                  |  [92m[1m                             104.6                           [0m[0m  |  [34m[1m                     91.9                    [0m[0m  |  [34m[1m          54.8         [0m[0m
      4      x 768   |  [34m[1m         106.2          [0m[0m  |                   58.3                  |  [34m[1m                             111.7                           [0m[0m  |  [34m[1m                     95.4                    [0m[0m  |  [34m[1m          54.8         [0m[0m
      2      x 768   |  [92m[1m         104.1          [0m[0m  |  [92m[1m                 41.9                [0m[0m  |  [92m[1m                             105.7                           [0m[0m  |                      107.3                      |  [34m[1m          54.4         [0m[0m
      1      x 768   |  [34m[1m         113.1          [0m[0m  |  [34m[1m                 45.2                [0m[0m  |  [34m[1m                             110.4                           [0m[0m  |  [34m[1m                     97.3                    [0m[0m  |            57.6         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------- Condensed Linear @ 80 with 8 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
8 threads: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m         111.7          [0m[0m  |                   52.7                  |  [31m[1m                            3582.3                           [0m[0m  |                      116.0                      |  [2m[91m         116.1         [0m[0m
      512    x 768   |  [34m[1m         110.5          [0m[0m  |                   52.0                  |  [31m[1m                            1792.1                           [0m[0m  |  [34m[1m                     89.3                    [0m[0m  |            58.9         
      256    x 768   |  [34m[1m         111.2          [0m[0m  |                   54.3                  |  [31m[1m                             901.1                           [0m[0m  |  [92m[1m                     87.0                    [0m[0m  |  [34m[1m          49.8         [0m[0m
      128    x 768   |  [92m[1m         104.4          [0m[0m  |                   52.4                  |  [2m[91m                             456.8                           [0m[0m  |  [92m[1m                     86.5                    [0m[0m  |  [92m[1m          49.0         [0m[0m
      64     x 768   |  [92m[1m         104.5          [0m[0m  |                   53.2                  |  [2m[91m                             230.4                           [0m[0m  |  [92m[1m                     87.1                    [0m[0m  |  [34m[1m          50.6         [0m[0m
      32     x 768   |  [92m[1m         104.2          [0m[0m  |                   52.4                  |                               119.1                             |  [34m[1m                     88.7                    [0m[0m  |  [34m[1m          50.2         [0m[0m
      16     x 768   |  [34m[1m         106.2          [0m[0m  |                   55.0                  |  [34m[1m                             105.0                           [0m[0m  |  [34m[1m                     90.8                    [0m[0m  |            54.5         
      8      x 768   |  [92m[1m         104.6          [0m[0m  |                   54.6                  |  [92m[1m                             103.2                           [0m[0m  |  [34m[1m                     90.9                    [0m[0m  |            54.0         
      4      x 768   |  [92m[1m         103.8          [0m[0m  |                   54.3                  |                               114.4                             |                       97.8                      |            57.8         
      2      x 768   |  [34m[1m         110.0          [0m[0m  |  [92m[1m                 45.4                [0m[0m  |  [34m[1m                             111.3                           [0m[0m  |                       97.0                      |            54.3         
      1      x 768   |  [92m[1m         104.0          [0m[0m  |  [34m[1m                 48.1                [0m[0m  |                               125.3                             |                      109.1                      |            71.0         

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 16 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1138225.4        [0m[0m  |  [31m[1m               754401.5              [0m[0m  |  [31m[1m                           197424.1                          [0m[0m  |  [31m[1m                  2851083.1                  [0m[0m  |  [31m[1m       1979254.4       [0m[0m
      512    x 768   |  [31m[1m        572639.8        [0m[0m  |  [31m[1m               367408.5              [0m[0m  |  [31m[1m                           133408.5                          [0m[0m  |  [31m[1m                  1432966.9                  [0m[0m  |  [31m[1m        984765.4       [0m[0m
      256    x 768   |  [31m[1m        283410.7        [0m[0m  |  [31m[1m               187882.3              [0m[0m  |  [31m[1m                            67009.0                          [0m[0m  |  [31m[1m                   704388.8                  [0m[0m  |  [31m[1m        485732.6       [0m[0m
      128    x 768   |  [31m[1m        142001.7        [0m[0m  |  [31m[1m                90720.7              [0m[0m  |  [31m[1m                            29400.6                          [0m[0m  |  [31m[1m                   353849.6                  [0m[0m  |  [31m[1m        242204.5       [0m[0m
      64     x 768   |  [31m[1m         72010.3        [0m[0m  |  [31m[1m                44858.6              [0m[0m  |  [31m[1m                            10043.8                          [0m[0m  |  [31m[1m                   183046.6                  [0m[0m  |  [31m[1m        121335.0       [0m[0m
      32     x 768   |  [31m[1m         35922.3        [0m[0m  |  [31m[1m                22790.2              [0m[0m  |  [31m[1m                             2861.3                          [0m[0m  |  [31m[1m                    89020.4                  [0m[0m  |  [31m[1m         63482.3       [0m[0m
      16     x 768   |  [31m[1m         17550.5        [0m[0m  |  [31m[1m                11146.3              [0m[0m  |  [31m[1m                             2644.0                          [0m[0m  |  [31m[1m                    44617.3                  [0m[0m  |  [31m[1m         31237.1       [0m[0m
      8      x 768   |  [31m[1m          8854.9        [0m[0m  |  [31m[1m                 5592.2              [0m[0m  |  [2m[91m                              877.0                          [0m[0m  |  [31m[1m                    23208.4                  [0m[0m  |  [31m[1m         16391.7       [0m[0m
      4      x 768   |  [2m[91m          4554.4        [0m[0m  |  [2m[91m                 2985.7              [0m[0m  |  [2m[91m                              521.1                          [0m[0m  |  [2m[91m                    11122.5                  [0m[0m  |  [2m[91m          7605.1       [0m[0m
      2      x 768   |            2233.9          |                   1431.8                |  [2m[91m                              405.9                          [0m[0m  |                       5540.4                    |            3812.7       
      1      x 768   |  [92m[1m          1137.2        [0m[0m  |  [92m[1m                  731.9              [0m[0m  |  [92m[1m                              200.0                          [0m[0m  |  [92m[1m                     2846.7                  [0m[0m  |  [92m[1m          1914.5       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1139529.5        [0m[0m  |  [31m[1m               781008.9              [0m[0m  |  [31m[1m                           525569.7                          [0m[0m  |  [31m[1m                  2876809.7                  [0m[0m  |  [31m[1m       1967728.1       [0m[0m
      512    x 768   |  [31m[1m        561500.2        [0m[0m  |  [31m[1m               392181.8              [0m[0m  |  [31m[1m                           193836.2                          [0m[0m  |  [31m[1m                  1424584.2                  [0m[0m  |  [31m[1m       1007260.2       [0m[0m
      256    x 768   |  [31m[1m        281244.5        [0m[0m  |  [31m[1m               193657.9              [0m[0m  |  [31m[1m                           102137.4                          [0m[0m  |  [31m[1m                   708982.2                  [0m[0m  |  [31m[1m        512175.4       [0m[0m
      128    x 768   |  [31m[1m        141982.8        [0m[0m  |  [31m[1m                96312.7              [0m[0m  |  [31m[1m                            66605.5                          [0m[0m  |  [31m[1m                   353294.6                  [0m[0m  |  [31m[1m        243970.4       [0m[0m
      64     x 768   |  [31m[1m         70194.7        [0m[0m  |  [31m[1m                53240.4              [0m[0m  |  [31m[1m                            28050.4                          [0m[0m  |  [31m[1m                   177196.9                  [0m[0m  |  [31m[1m        129682.3       [0m[0m
      32     x 768   |  [31m[1m         35465.1        [0m[0m  |  [31m[1m                24475.5              [0m[0m  |  [31m[1m                             6215.1                          [0m[0m  |  [31m[1m                    88590.3                  [0m[0m  |  [31m[1m         60611.2       [0m[0m
      16     x 768   |  [31m[1m         17870.5        [0m[0m  |  [31m[1m                12283.1              [0m[0m  |  [31m[1m                             2683.5                          [0m[0m  |  [31m[1m                    53252.9                  [0m[0m  |  [31m[1m         30482.4       [0m[0m
      8      x 768   |  [31m[1m          8645.3        [0m[0m  |  [31m[1m                 6410.7              [0m[0m  |  [2m[91m                             1401.7                          [0m[0m  |  [31m[1m                    22128.7                  [0m[0m  |  [31m[1m         15019.0       [0m[0m
      4      x 768   |  [2m[91m          4439.9        [0m[0m  |  [2m[91m                 3006.2              [0m[0m  |  [2m[91m                              907.6                          [0m[0m  |  [2m[91m                    11088.4                  [0m[0m  |  [2m[91m          7627.9       [0m[0m
      2      x 768   |            2181.0          |                   1514.9                |                                450.5                            |                       5534.4                    |  [2m[91m          3862.5       [0m[0m
      1      x 768   |  [92m[1m          1118.3        [0m[0m  |  [92m[1m                  780.1              [0m[0m  |  [92m[1m                              290.0                          [0m[0m  |  [92m[1m                     2806.8                  [0m[0m  |  [92m[1m          1904.7       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 16 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 16 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            56.9            |                   55.4                  |  [31m[1m                            3588.7                           [0m[0m  |  [2m[91m                    112.8                    [0m[0m  |  [2m[91m         114.5         [0m[0m
      512    x 768   |  [34m[1m          55.3          [0m[0m  |                   56.9                  |  [31m[1m                            1810.0                           [0m[0m  |                       68.6                      |            58.8         
      256    x 768   |            59.4            |                   57.1                  |  [31m[1m                             901.8                           [0m[0m  |  [34m[1m                     50.8                    [0m[0m  |  [34m[1m          52.3         [0m[0m
      128    x 768   |            59.7            |                   56.4                  |  [31m[1m                             460.4                           [0m[0m  |  [92m[1m                     48.1                    [0m[0m  |  [92m[1m          49.4         [0m[0m
      64     x 768   |            56.7            |                   56.4                  |  [2m[91m                             231.5                           [0m[0m  |                       53.4                      |  [34m[1m          50.0         [0m[0m
      32     x 768   |            55.4            |                   54.0                  |                               121.4                             |                       70.9                      |            54.8         
      16     x 768   |  [34m[1m          55.1          [0m[0m  |                   54.3                  |  [34m[1m                              90.2                           [0m[0m  |                       53.7                      |            58.0         
      8      x 768   |            55.5            |                   57.2                  |                               106.8                             |                       70.2                      |            58.1         
      4      x 768   |            58.2            |                   53.5                  |  [34m[1m                              85.1                           [0m[0m  |                       53.1                      |            56.8         
      2      x 768   |  [92m[1m          50.3          [0m[0m  |  [34m[1m                 45.5                [0m[0m  |  [34m[1m                              84.7                           [0m[0m  |  [34m[1m                     50.3                    [0m[0m  |            54.7         
      1      x 768   |  [92m[1m          50.5          [0m[0m  |  [92m[1m                 43.6                [0m[0m  |  [92m[1m                              82.3                           [0m[0m  |  [92m[1m                     47.9                    [0m[0m  |  [34m[1m          53.9         [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m          51.8          [0m[0m  |                   65.2                  |  [31m[1m                            8372.1                           [0m[0m  |  [2m[91m                    114.5                    [0m[0m  |  [2m[91m         116.6         [0m[0m
      512    x 768   |  [92m[1m          47.3          [0m[0m  |                   49.3                  |  [31m[1m                            4201.6                           [0m[0m  |                       68.9                      |            59.4         
      256    x 768   |  [34m[1m          51.1          [0m[0m  |                   52.3                  |  [31m[1m                            2105.5                           [0m[0m  |  [34m[1m                     51.0                    [0m[0m  |  [34m[1m          55.5         [0m[0m
      128    x 768   |            56.9            |                   54.2                  |  [31m[1m                            1060.8                           [0m[0m  |                       52.9                      |  [92m[1m          53.1         [0m[0m
      64     x 768   |            58.9            |                   67.2                  |  [31m[1m                             534.9                           [0m[0m  |                       66.9                      |            66.5         
      32     x 768   |            56.4            |                   66.2                  |  [2m[91m                             271.1                           [0m[0m  |                       66.3                      |  [92m[1m          52.9         [0m[0m
      16     x 768   |            58.2            |                   56.4                  |                               141.7                             |                       53.8                      |  [34m[1m          58.1         [0m[0m
      8      x 768   |            58.5            |                   55.8                  |  [34m[1m                              83.2                           [0m[0m  |  [34m[1m                     50.1                    [0m[0m  |  [34m[1m          54.4         [0m[0m
      4      x 768   |            57.1            |                   54.1                  |  [92m[1m                              80.8                           [0m[0m  |  [34m[1m                     50.2                    [0m[0m  |            59.6         
      2      x 768   |            52.2            |  [34m[1m                 43.6                [0m[0m  |  [34m[1m                              84.4                           [0m[0m  |  [34m[1m                     50.7                    [0m[0m  |  [34m[1m          54.1         [0m[0m
      1      x 768   |            69.1            |  [92m[1m                 40.1                [0m[0m  |                               105.1                             |  [92m[1m                     47.3                    [0m[0m  |  [34m[1m          54.1         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        742771.2        [0m[0m  |  [31m[1m               729191.4              [0m[0m  |  [31m[1m                           188733.0                          [0m[0m  |  [31m[1m                  1950615.1                  [0m[0m  |  [31m[1m       1976683.1       [0m[0m
      512    x 768   |  [31m[1m        365520.4        [0m[0m  |  [31m[1m               366543.0              [0m[0m  |  [31m[1m                           135199.0                          [0m[0m  |  [31m[1m                  1001568.1                  [0m[0m  |  [31m[1m        981823.7       [0m[0m
      256    x 768   |  [31m[1m        191930.9        [0m[0m  |  [31m[1m               181646.3              [0m[0m  |  [31m[1m                            66504.7                          [0m[0m  |  [31m[1m                   504859.8                  [0m[0m  |  [31m[1m        542219.5       [0m[0m
      128    x 768   |  [31m[1m         90283.4        [0m[0m  |  [31m[1m                91451.6              [0m[0m  |  [31m[1m                            28253.2                          [0m[0m  |  [31m[1m                   247248.0                  [0m[0m  |  [31m[1m        243851.5       [0m[0m
      64     x 768   |  [31m[1m         45140.9        [0m[0m  |  [31m[1m                45304.6              [0m[0m  |  [31m[1m                             9383.2                          [0m[0m  |  [31m[1m                   121787.3                  [0m[0m  |  [31m[1m        123050.6       [0m[0m
      32     x 768   |  [31m[1m         22799.7        [0m[0m  |  [31m[1m                26031.3              [0m[0m  |  [31m[1m                             3267.1                          [0m[0m  |  [31m[1m                    65369.1                  [0m[0m  |  [31m[1m         62372.1       [0m[0m
      16     x 768   |  [31m[1m         11215.4        [0m[0m  |  [31m[1m                11292.3              [0m[0m  |  [31m[1m                             1577.2                          [0m[0m  |  [31m[1m                    30829.9                  [0m[0m  |  [31m[1m         30925.2       [0m[0m
      8      x 768   |  [31m[1m          5821.4        [0m[0m  |  [31m[1m                 5698.2              [0m[0m  |  [2m[91m                              769.1                          [0m[0m  |  [31m[1m                    15006.9                  [0m[0m  |  [31m[1m         15060.0       [0m[0m
      4      x 768   |  [2m[91m          2849.0        [0m[0m  |  [2m[91m                 2825.1              [0m[0m  |  [2m[91m                              522.3                          [0m[0m  |  [2m[91m                     7526.8                  [0m[0m  |  [2m[91m          7615.5       [0m[0m
      2      x 768   |            1465.3          |                   1475.6                |                                288.1                            |  [2m[91m                     3903.9                  [0m[0m  |  [2m[91m          3924.5       [0m[0m
      1      x 768   |  [92m[1m           755.9        [0m[0m  |  [92m[1m                  776.2              [0m[0m  |  [92m[1m                              195.9                          [0m[0m  |  [92m[1m                     1920.8                  [0m[0m  |  [92m[1m          1904.0       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        778721.7        [0m[0m  |  [31m[1m               783819.1              [0m[0m  |  [31m[1m                           370498.2                          [0m[0m  |  [31m[1m                  1943033.5                  [0m[0m  |  [31m[1m       1945886.9       [0m[0m
      512    x 768   |  [31m[1m        398415.1        [0m[0m  |  [31m[1m               384611.0              [0m[0m  |  [31m[1m                           195050.9                          [0m[0m  |  [31m[1m                   984740.9                  [0m[0m  |  [31m[1m       1079667.9       [0m[0m
      256    x 768   |  [31m[1m        195113.2        [0m[0m  |  [31m[1m               193327.7              [0m[0m  |  [31m[1m                           116112.5                          [0m[0m  |  [31m[1m                   485676.4                  [0m[0m  |  [31m[1m        488357.9       [0m[0m
      128    x 768   |  [31m[1m         97126.2        [0m[0m  |  [31m[1m               100108.1              [0m[0m  |  [31m[1m                            71034.2                          [0m[0m  |  [31m[1m                   242291.3                  [0m[0m  |  [31m[1m        242742.1       [0m[0m
      64     x 768   |  [31m[1m         52862.6        [0m[0m  |  [31m[1m                52813.4              [0m[0m  |  [31m[1m                            29810.8                          [0m[0m  |  [31m[1m                   125216.5                  [0m[0m  |  [31m[1m        121074.4       [0m[0m
      32     x 768   |  [31m[1m         24764.1        [0m[0m  |  [31m[1m                24564.5              [0m[0m  |  [31m[1m                             6352.5                          [0m[0m  |  [31m[1m                    60574.8                  [0m[0m  |  [31m[1m         61648.7       [0m[0m
      16     x 768   |  [31m[1m         12003.0        [0m[0m  |  [31m[1m                12053.4              [0m[0m  |  [31m[1m                             2729.7                          [0m[0m  |  [31m[1m                    30601.3                  [0m[0m  |  [31m[1m         31197.9       [0m[0m
      8      x 768   |  [31m[1m          6088.6        [0m[0m  |  [31m[1m                 6077.6              [0m[0m  |  [31m[1m                             1500.7                          [0m[0m  |  [31m[1m                    15230.6                  [0m[0m  |  [31m[1m         15330.4       [0m[0m
      4      x 768   |  [2m[91m          3085.5        [0m[0m  |  [2m[91m                 3264.4              [0m[0m  |  [2m[91m                              743.3                          [0m[0m  |  [2m[91m                     7579.0                  [0m[0m  |  [2m[91m          7567.9       [0m[0m
      2      x 768   |            1524.8          |                   1523.8                |                                409.5                            |  [2m[91m                     4050.8                  [0m[0m  |            3802.1       
      1      x 768   |  [92m[1m           783.3        [0m[0m  |  [92m[1m                  781.2              [0m[0m  |  [92m[1m                              271.0                          [0m[0m  |  [92m[1m                     1909.9                  [0m[0m  |  [92m[1m          1986.2       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 16 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            64.9            |                   54.9                  |  [31m[1m                            3573.6                           [0m[0m  |                      114.3                      |  [2m[91m         114.7         [0m[0m
      512    x 768   |            71.7            |                   57.8                  |  [31m[1m                            1795.5                           [0m[0m  |                       72.1                      |            58.7         
      256    x 768   |            65.5            |                   52.5                  |  [31m[1m                             912.9                           [0m[0m  |  [34m[1m                     63.8                    [0m[0m  |  [92m[1m          49.4         [0m[0m
      128    x 768   |            66.3            |                   53.1                  |  [31m[1m                             461.3                           [0m[0m  |  [92m[1m                     61.9                    [0m[0m  |            57.1         
      64     x 768   |            79.0            |                   55.2                  |  [2m[91m                             231.6                           [0m[0m  |  [34m[1m                     66.9                    [0m[0m  |  [34m[1m          50.3         [0m[0m
      32     x 768   |            67.3            |                   57.5                  |                               120.9                             |                       68.5                      |  [34m[1m          53.9         [0m[0m
      16     x 768   |            72.6            |                   57.3                  |  [34m[1m                              96.2                           [0m[0m  |                       72.2                      |            57.6         
      8      x 768   |            71.8            |                   57.3                  |  [34m[1m                              94.6                           [0m[0m  |                       68.7                      |            56.7         
      4      x 768   |            68.8            |                   53.9                  |  [92m[1m                              92.0                           [0m[0m  |                       71.0                      |            55.2         
      2      x 768   |  [92m[1m          55.5          [0m[0m  |  [92m[1m                 40.7                [0m[0m  |                               110.7                             |                       86.2                      |            71.0         
      1      x 768   |            73.8            |                   55.0                  |                               113.1                             |                       86.5                      |            71.2         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            80.6            |                   53.2                  |  [31m[1m                            8373.1                           [0m[0m  |                      116.6                      |  [2m[91m         116.4         [0m[0m
      512    x 768   |            67.5            |                   51.0                  |  [31m[1m                            4200.8                           [0m[0m  |  [34m[1m                     66.2                    [0m[0m  |            59.2         
      256    x 768   |            65.0            |                   51.9                  |  [31m[1m                            2106.3                           [0m[0m  |                       81.5                      |            65.9         
      128    x 768   |            83.6            |                   67.4                  |  [31m[1m                            1060.8                           [0m[0m  |                       80.8                      |            65.7         
      64     x 768   |            84.4            |                   67.7                  |  [31m[1m                             534.8                           [0m[0m  |  [92m[1m                     64.0                    [0m[0m  |  [92m[1m          51.3         [0m[0m
      32     x 768   |            65.3            |                   53.2                  |  [2m[91m                             270.4                           [0m[0m  |  [92m[1m                     64.1                    [0m[0m  |  [92m[1m          51.0         [0m[0m
      16     x 768   |            69.4            |                   53.8                  |                               140.9                             |  [34m[1m                     68.7                    [0m[0m  |  [34m[1m          53.8         [0m[0m
      8      x 768   |            68.4            |                   54.5                  |  [34m[1m                              91.6                           [0m[0m  |  [34m[1m                     66.8                    [0m[0m  |  [34m[1m          54.1         [0m[0m
      4      x 768   |            67.7            |                   54.1                  |  [34m[1m                              92.0                           [0m[0m  |  [34m[1m                     67.0                    [0m[0m  |  [34m[1m          55.2         [0m[0m
      2      x 768   |            60.2            |  [34m[1m                 44.3                [0m[0m  |  [34m[1m                              95.7                           [0m[0m  |                       72.8                      |            57.6         
      1      x 768   |  [92m[1m          54.6          [0m[0m  |  [92m[1m                 40.4                [0m[0m  |  [92m[1m                              88.4                           [0m[0m  |  [34m[1m                     68.2                    [0m[0m  |  [34m[1m          54.2         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        731137.8        [0m[0m  |  [31m[1m               721931.5              [0m[0m  |  [31m[1m                           62658.1                           [0m[0m  |  [31m[1m                  1991417.7                  [0m[0m  |  [31m[1m       1988693.0       [0m[0m
      512    x 768   |  [31m[1m        364503.6        [0m[0m  |  [31m[1m               361591.6              [0m[0m  |  [31m[1m                           31493.4                           [0m[0m  |  [31m[1m                   979904.5                  [0m[0m  |  [31m[1m        983090.1       [0m[0m
      256    x 768   |  [31m[1m        183551.7        [0m[0m  |  [31m[1m               205931.4              [0m[0m  |  [31m[1m                           15986.8                           [0m[0m  |  [31m[1m                   487156.3                  [0m[0m  |  [31m[1m        488643.3       [0m[0m
      128    x 768   |  [31m[1m         94656.1        [0m[0m  |  [31m[1m                91673.2              [0m[0m  |  [31m[1m                            5632.7                           [0m[0m  |  [31m[1m                   243018.7                  [0m[0m  |  [31m[1m        242661.9       [0m[0m
      64     x 768   |  [31m[1m         45134.3        [0m[0m  |  [31m[1m                45097.5              [0m[0m  |  [31m[1m                            4192.7                           [0m[0m  |  [31m[1m                   126405.4                  [0m[0m  |  [31m[1m        121621.3       [0m[0m
      32     x 768   |  [31m[1m         23310.1        [0m[0m  |  [31m[1m                24376.6              [0m[0m  |  [31m[1m                            2175.3                           [0m[0m  |  [31m[1m                    60535.9                  [0m[0m  |  [31m[1m         60384.4       [0m[0m
      16     x 768   |  [31m[1m         11422.9        [0m[0m  |  [31m[1m                11285.6              [0m[0m  |  [31m[1m                            1086.6                           [0m[0m  |  [31m[1m                    30640.8                  [0m[0m  |  [31m[1m         30448.9       [0m[0m
      8      x 768   |  [31m[1m          5938.4        [0m[0m  |  [31m[1m                 5968.6              [0m[0m  |  [2m[91m                             611.2                           [0m[0m  |  [31m[1m                    15606.4                  [0m[0m  |  [31m[1m         15142.0       [0m[0m
      4      x 768   |  [2m[91m          2915.6        [0m[0m  |  [2m[91m                 2807.5              [0m[0m  |  [2m[91m                             350.2                           [0m[0m  |  [2m[91m                     7608.2                  [0m[0m  |  [2m[91m          7546.5       [0m[0m
      2      x 768   |            1564.0          |                   1415.8                |                               214.4                             |                       3852.2                    |            3790.1       
      1      x 768   |  [92m[1m           791.8        [0m[0m  |  [92m[1m                  727.9              [0m[0m  |  [92m[1m                             151.6                           [0m[0m  |  [92m[1m                     1931.2                  [0m[0m  |  [92m[1m          1909.2       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        815036.2        [0m[0m  |  [31m[1m               779704.1              [0m[0m  |  [31m[1m                           121407.6                          [0m[0m  |  [31m[1m                  2013897.1                  [0m[0m  |  [31m[1m       1984100.0       [0m[0m
      512    x 768   |  [31m[1m        389205.5        [0m[0m  |  [31m[1m               436493.6              [0m[0m  |  [31m[1m                            63355.7                          [0m[0m  |  [31m[1m                   969722.4                  [0m[0m  |  [31m[1m        976521.6       [0m[0m
      256    x 768   |  [31m[1m        195445.4        [0m[0m  |  [31m[1m               194837.7              [0m[0m  |  [31m[1m                            30765.3                          [0m[0m  |  [31m[1m                   492053.2                  [0m[0m  |  [31m[1m        485711.1       [0m[0m
      128    x 768   |  [31m[1m        101582.6        [0m[0m  |  [31m[1m                97641.4              [0m[0m  |  [31m[1m                            15777.2                          [0m[0m  |  [31m[1m                   244388.5                  [0m[0m  |  [31m[1m        243782.8       [0m[0m
      64     x 768   |  [31m[1m         49672.6        [0m[0m  |  [31m[1m                51916.6              [0m[0m  |  [31m[1m                             8240.3                          [0m[0m  |  [31m[1m                   124742.9                  [0m[0m  |  [31m[1m        130777.5       [0m[0m
      32     x 768   |  [31m[1m         24702.5        [0m[0m  |  [31m[1m                24698.7              [0m[0m  |  [31m[1m                             4124.1                          [0m[0m  |  [31m[1m                    60733.0                  [0m[0m  |  [31m[1m         62584.8       [0m[0m
      16     x 768   |  [31m[1m         12136.6        [0m[0m  |  [31m[1m                11954.0              [0m[0m  |  [31m[1m                             2111.4                          [0m[0m  |  [31m[1m                    30789.6                  [0m[0m  |  [31m[1m         31772.3       [0m[0m
      8      x 768   |  [31m[1m          6366.0        [0m[0m  |  [31m[1m                 6057.9              [0m[0m  |  [2m[91m                              893.1                          [0m[0m  |  [31m[1m                    15194.4                  [0m[0m  |  [31m[1m         15516.4       [0m[0m
      4      x 768   |  [2m[91m          3075.6        [0m[0m  |  [2m[91m                 2998.6              [0m[0m  |                                438.3                            |  [2m[91m                     7748.2                  [0m[0m  |  [2m[91m          7820.7       [0m[0m
      2      x 768   |            1574.4          |                   1521.4                |                                361.5                            |                       3794.1                    |            3754.6       
      1      x 768   |  [92m[1m           860.7        [0m[0m  |  [92m[1m                  782.9              [0m[0m  |  [92m[1m                              229.9                          [0m[0m  |  [92m[1m                     1970.9                  [0m[0m  |  [92m[1m          1933.9       [0m[0m

Times are in microseconds (us).
/home/user/build/.venv/lib/python3.10/site-packages/torch/jit/_script.py:1241: UserWarning: `optimize` is deprecated and has no effect. Use `with torch.jit.optimized_execution() instead
  warnings.warn(

Benchmarking batch size 1024 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 16 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m         110.9          [0m[0m  |                   55.3                  |  [31m[1m                            1780.2                           [0m[0m  |                      114.4                      |  [2m[91m         115.3         [0m[0m
      512    x 768   |  [34m[1m         112.5          [0m[0m  |                   53.7                  |  [31m[1m                             905.0                           [0m[0m  |  [92m[1m                     89.4                    [0m[0m  |            59.0         
      256    x 768   |  [34m[1m         108.8          [0m[0m  |                   55.8                  |  [2m[91m                             460.7                           [0m[0m  |  [34m[1m                     90.4                    [0m[0m  |  [34m[1m          51.8         [0m[0m
      128    x 768   |  [34m[1m         109.8          [0m[0m  |                   56.6                  |  [2m[91m                             233.6                           [0m[0m  |  [34m[1m                     92.0                    [0m[0m  |  [34m[1m          53.7         [0m[0m
      64     x 768   |  [34m[1m         111.4          [0m[0m  |                   55.9                  |                               134.1                             |  [34m[1m                     93.2                    [0m[0m  |  [34m[1m          52.2         [0m[0m
      32     x 768   |  [34m[1m         106.4          [0m[0m  |                   56.3                  |  [34m[1m                             112.8                           [0m[0m  |  [92m[1m                     89.6                    [0m[0m  |  [92m[1m          50.9         [0m[0m
      16     x 768   |  [34m[1m         112.1          [0m[0m  |                   55.7                  |  [34m[1m                             106.0                           [0m[0m  |  [34m[1m                     93.8                    [0m[0m  |  [34m[1m          56.0         [0m[0m
      8      x 768   |  [92m[1m         104.8          [0m[0m  |                   55.0                  |  [34m[1m                             106.8                           [0m[0m  |                      101.3                      |  [34m[1m          55.5         [0m[0m
      4      x 768   |           115.5            |                   54.1                  |  [34m[1m                             111.3                           [0m[0m  |  [34m[1m                     91.6                    [0m[0m  |  [34m[1m          55.7         [0m[0m
      2      x 768   |  [92m[1m         104.1          [0m[0m  |  [34m[1m                 43.2                [0m[0m  |  [34m[1m                             113.9                           [0m[0m  |  [34m[1m                     91.9                    [0m[0m  |            57.1         
      1      x 768   |  [34m[1m         108.6          [0m[0m  |  [92m[1m                 40.2                [0m[0m  |  [92m[1m                             103.9                           [0m[0m  |  [34m[1m                     92.8                    [0m[0m  |            57.2         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 16 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
16 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [92m[1m         104.3          [0m[0m  |                   49.6                  |  [31m[1m                            3581.3                           [0m[0m  |                      116.0                      |  [2m[91m         116.1         [0m[0m
      512    x 768   |  [34m[1m         105.7          [0m[0m  |                   50.1                  |  [31m[1m                            1794.9                           [0m[0m  |  [34m[1m                     89.8                    [0m[0m  |            59.2         
      256    x 768   |  [34m[1m         105.0          [0m[0m  |                   50.6                  |  [31m[1m                             903.4                           [0m[0m  |  [92m[1m                     88.2                    [0m[0m  |  [92m[1m          48.7         [0m[0m
      128    x 768   |  [34m[1m         105.0          [0m[0m  |                   50.3                  |  [2m[91m                             456.8                           [0m[0m  |  [92m[1m                     88.6                    [0m[0m  |  [34m[1m          51.8         [0m[0m
      64     x 768   |  [34m[1m         109.3          [0m[0m  |                   53.6                  |  [2m[91m                             230.2                           [0m[0m  |  [34m[1m                     90.6                    [0m[0m  |  [34m[1m          51.1         [0m[0m
      32     x 768   |  [92m[1m         104.5          [0m[0m  |                   51.3                  |                               119.0                             |  [34m[1m                     90.4                    [0m[0m  |  [34m[1m          51.2         [0m[0m
      16     x 768   |  [34m[1m         110.4          [0m[0m  |                   55.6                  |  [92m[1m                             104.6                           [0m[0m  |  [34m[1m                     93.3                    [0m[0m  |            54.7         
      8      x 768   |  [92m[1m         104.8          [0m[0m  |                   57.4                  |  [34m[1m                             110.7                           [0m[0m  |  [34m[1m                     95.4                    [0m[0m  |            58.1         
      4      x 768   |  [34m[1m         111.4          [0m[0m  |                   57.7                  |  [34m[1m                             111.8                           [0m[0m  |  [34m[1m                     92.0                    [0m[0m  |            56.1         
      2      x 768   |  [92m[1m         103.9          [0m[0m  |  [92m[1m                 41.3                [0m[0m  |  [34m[1m                             112.3                           [0m[0m  |  [34m[1m                     90.9                    [0m[0m  |            53.7         
      1      x 768   |  [34m[1m         111.4          [0m[0m  |  [34m[1m                 43.4                [0m[0m  |  [34m[1m                             114.8                           [0m[0m  |  [34m[1m                     90.7                    [0m[0m  |            53.7         

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 32 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1128019.2        [0m[0m  |  [31m[1m               725000.7              [0m[0m  |  [31m[1m                           191956.9                          [0m[0m  |  [31m[1m                  2841326.6                  [0m[0m  |  [31m[1m       2023652.4       [0m[0m
      512    x 768   |  [31m[1m        568986.0        [0m[0m  |  [31m[1m               361583.6              [0m[0m  |  [31m[1m                            97998.5                          [0m[0m  |  [31m[1m                  1448840.0                  [0m[0m  |  [31m[1m        976828.1       [0m[0m
      256    x 768   |  [31m[1m        284494.7        [0m[0m  |  [31m[1m               182698.4              [0m[0m  |  [31m[1m                            54995.4                          [0m[0m  |  [31m[1m                   706407.0                  [0m[0m  |  [31m[1m        487226.6       [0m[0m
      128    x 768   |  [31m[1m        141931.6        [0m[0m  |  [31m[1m                91118.6              [0m[0m  |  [31m[1m                            27680.7                          [0m[0m  |  [31m[1m                   352275.7                  [0m[0m  |  [31m[1m        244103.2       [0m[0m
      64     x 768   |  [31m[1m         71167.1        [0m[0m  |  [31m[1m                45420.1              [0m[0m  |  [31m[1m                             9684.7                          [0m[0m  |  [31m[1m                   177508.5                  [0m[0m  |  [31m[1m        124286.2       [0m[0m
      32     x 768   |  [31m[1m         35893.9        [0m[0m  |  [31m[1m                22862.3              [0m[0m  |  [31m[1m                             2697.6                          [0m[0m  |  [31m[1m                    88834.4                  [0m[0m  |  [31m[1m         60556.8       [0m[0m
      16     x 768   |  [31m[1m         17681.5        [0m[0m  |  [31m[1m                11202.2              [0m[0m  |  [31m[1m                             1397.1                          [0m[0m  |  [31m[1m                    45915.2                  [0m[0m  |  [31m[1m         30752.5       [0m[0m
      8      x 768   |  [31m[1m          8934.3        [0m[0m  |  [31m[1m                 5644.9              [0m[0m  |  [2m[91m                              532.3                          [0m[0m  |  [31m[1m                    22137.0                  [0m[0m  |  [31m[1m         15143.0       [0m[0m
      4      x 768   |  [2m[91m          4528.1        [0m[0m  |  [2m[91m                 2838.9              [0m[0m  |  [2m[91m                              373.8                          [0m[0m  |  [2m[91m                    11117.3                  [0m[0m  |  [2m[91m          7644.0       [0m[0m
      2      x 768   |            2254.3          |                   1412.9                |                                255.8                            |  [2m[91m                     5596.2                  [0m[0m  |            3787.5       
      1      x 768   |  [92m[1m          1127.3        [0m[0m  |  [92m[1m                  748.1              [0m[0m  |  [92m[1m                              166.2                          [0m[0m  |  [92m[1m                     2794.4                  [0m[0m  |  [92m[1m          1927.6       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m       1126241.4        [0m[0m  |  [31m[1m               821765.1              [0m[0m  |  [31m[1m                           305884.9                          [0m[0m  |  [31m[1m                  2909392.6                  [0m[0m  |  [31m[1m       1958958.2       [0m[0m
      512    x 768   |  [31m[1m        560214.2        [0m[0m  |  [31m[1m               389512.9              [0m[0m  |  [31m[1m                           160616.5                          [0m[0m  |  [31m[1m                  1421621.3                  [0m[0m  |  [31m[1m        982737.7       [0m[0m
      256    x 768   |  [31m[1m        292253.7        [0m[0m  |  [31m[1m               194542.0              [0m[0m  |  [31m[1m                            95121.2                          [0m[0m  |  [31m[1m                   712348.5                  [0m[0m  |  [31m[1m        486898.8       [0m[0m
      128    x 768   |  [31m[1m        144478.4        [0m[0m  |  [31m[1m                98113.9              [0m[0m  |  [31m[1m                            51887.6                          [0m[0m  |  [31m[1m                   359538.5                  [0m[0m  |  [31m[1m        243431.7       [0m[0m
      64     x 768   |  [31m[1m         74292.0        [0m[0m  |  [31m[1m                48522.2              [0m[0m  |  [31m[1m                            28160.2                          [0m[0m  |  [31m[1m                   177871.7                  [0m[0m  |  [31m[1m        121814.9       [0m[0m
      32     x 768   |  [31m[1m         35716.4        [0m[0m  |  [31m[1m                25225.8              [0m[0m  |  [31m[1m                             4730.3                          [0m[0m  |  [31m[1m                    89926.1                  [0m[0m  |  [31m[1m         62479.3       [0m[0m
      16     x 768   |  [31m[1m         17405.8        [0m[0m  |  [31m[1m                13570.6              [0m[0m  |  [31m[1m                             2633.6                          [0m[0m  |  [31m[1m                    45315.8                  [0m[0m  |  [31m[1m         30905.2       [0m[0m
      8      x 768   |  [31m[1m          8708.7        [0m[0m  |  [31m[1m                 6085.6              [0m[0m  |  [2m[91m                              834.2                          [0m[0m  |  [31m[1m                    22259.6                  [0m[0m  |  [31m[1m         14939.3       [0m[0m
      4      x 768   |  [2m[91m          4362.0        [0m[0m  |  [2m[91m                 3016.2              [0m[0m  |  [2m[91m                              524.9                          [0m[0m  |  [2m[91m                    11030.0                  [0m[0m  |  [2m[91m          7713.8       [0m[0m
      2      x 768   |            2198.5          |                   1525.2                |                                363.1                            |                       5536.5                    |            3800.7       
      1      x 768   |  [92m[1m          1173.1        [0m[0m  |  [92m[1m                  775.1              [0m[0m  |  [92m[1m                              240.6                          [0m[0m  |  [92m[1m                     2793.9                  [0m[0m  |  [92m[1m          1901.2       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 32 with compiler script using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 32 with compiler script using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |            57.4            |                   54.6                  |  [31m[1m                            3601.0                           [0m[0m  |  [2m[91m                    113.1                    [0m[0m  |  [2m[91m         114.9         [0m[0m
      512    x 768   |            55.6            |                   54.3                  |  [31m[1m                            1808.7                           [0m[0m  |                       68.2                      |            58.5         
      256    x 768   |            59.4            |                   53.4                  |  [31m[1m                             903.6                           [0m[0m  |  [92m[1m                     47.9                    [0m[0m  |  [92m[1m          50.1         [0m[0m
      128    x 768   |            55.5            |                   55.0                  |  [31m[1m                             459.8                           [0m[0m  |  [34m[1m                     49.2                    [0m[0m  |  [92m[1m          49.7         [0m[0m
      64     x 768   |            56.9            |                   52.8                  |  [2m[91m                             231.6                           [0m[0m  |  [34m[1m                     48.6                    [0m[0m  |  [34m[1m          51.1         [0m[0m
      32     x 768   |            55.4            |                   53.4                  |                               121.5                             |  [34m[1m                     52.1                    [0m[0m  |  [34m[1m          50.3         [0m[0m
      16     x 768   |  [34m[1m          50.9          [0m[0m  |                   52.7                  |  [34m[1m                              81.4                           [0m[0m  |  [34m[1m                     50.0                    [0m[0m  |            56.5         
      8      x 768   |  [34m[1m          51.6          [0m[0m  |                   53.3                  |  [34m[1m                              80.6                           [0m[0m  |  [34m[1m                     49.9                    [0m[0m  |  [34m[1m          54.4         [0m[0m
      4      x 768   |            51.7            |                   50.3                  |  [92m[1m                              79.4                           [0m[0m  |  [34m[1m                     49.4                    [0m[0m  |  [34m[1m          54.3         [0m[0m
      2      x 768   |  [34m[1m          49.5          [0m[0m  |  [92m[1m                 39.8                [0m[0m  |  [34m[1m                              81.0                           [0m[0m  |  [34m[1m                     49.3                    [0m[0m  |  [34m[1m          54.5         [0m[0m
      1      x 768   |  [92m[1m          46.9          [0m[0m  |  [34m[1m                 40.8                [0m[0m  |  [34m[1m                              80.3                           [0m[0m  |  [92m[1m                     47.8                    [0m[0m  |            55.4         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m          50.5          [0m[0m  |                   49.3                  |  [31m[1m                            8395.3                           [0m[0m  |  [2m[91m                    115.2                    [0m[0m  |  [2m[91m         116.6         [0m[0m
      512    x 768   |  [92m[1m          47.7          [0m[0m  |                   50.1                  |  [31m[1m                            4238.3                           [0m[0m  |                       69.5                      |            59.3         
      256    x 768   |  [34m[1m          50.5          [0m[0m  |                   50.7                  |  [31m[1m                            2102.7                           [0m[0m  |  [34m[1m                     50.2                    [0m[0m  |  [92m[1m          49.6         [0m[0m
      128    x 768   |            52.6            |                   50.5                  |  [31m[1m                            1065.8                           [0m[0m  |  [34m[1m                     49.3                    [0m[0m  |  [92m[1m          50.1         [0m[0m
      64     x 768   |  [34m[1m          51.7          [0m[0m  |                   50.0                  |  [31m[1m                             537.8                           [0m[0m  |  [34m[1m                     48.8                    [0m[0m  |  [34m[1m          50.6         [0m[0m
      32     x 768   |            59.5            |                   50.1                  |  [2m[91m                             270.3                           [0m[0m  |  [34m[1m                     50.0                    [0m[0m  |  [92m[1m          50.0         [0m[0m
      16     x 768   |            55.7            |                   53.5                  |                               140.2                             |  [34m[1m                     50.7                    [0m[0m  |            55.0         
      8      x 768   |            56.6            |                   54.3                  |  [92m[1m                              79.9                           [0m[0m  |                       53.4                      |  [34m[1m          54.2         [0m[0m
      4      x 768   |            56.2            |                   54.2                  |  [92m[1m                              79.5                           [0m[0m  |  [34m[1m                     52.2                    [0m[0m  |            57.2         
      2      x 768   |  [34m[1m          51.3          [0m[0m  |  [34m[1m                 41.5                [0m[0m  |  [34m[1m                              80.4                           [0m[0m  |  [34m[1m                     49.4                    [0m[0m  |  [34m[1m          54.3         [0m[0m
      1      x 768   |  [34m[1m          51.2          [0m[0m  |  [92m[1m                 41.0                [0m[0m  |  [34m[1m                              81.3                           [0m[0m  |  [92m[1m                     47.7                    [0m[0m  |  [34m[1m          54.4         [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        730597.9        [0m[0m  |  [31m[1m               756765.5              [0m[0m  |  [31m[1m                           186837.8                          [0m[0m  |  [31m[1m                  1955126.3                  [0m[0m  |  [31m[1m       1969009.3       [0m[0m
      512    x 768   |  [31m[1m        362016.1        [0m[0m  |  [31m[1m               363154.5              [0m[0m  |  [31m[1m                           101871.6                          [0m[0m  |  [31m[1m                   977636.4                  [0m[0m  |  [31m[1m        976115.5       [0m[0m
      256    x 768   |  [31m[1m        183803.8        [0m[0m  |  [31m[1m               180725.7              [0m[0m  |  [31m[1m                            61369.3                          [0m[0m  |  [31m[1m                   489600.0                  [0m[0m  |  [31m[1m        500006.5       [0m[0m
      128    x 768   |  [31m[1m         91356.8        [0m[0m  |  [31m[1m                91840.6              [0m[0m  |  [31m[1m                            33941.4                          [0m[0m  |  [31m[1m                   249933.9                  [0m[0m  |  [31m[1m        243781.5       [0m[0m
      64     x 768   |  [31m[1m         45836.3        [0m[0m  |  [31m[1m                46213.9              [0m[0m  |  [31m[1m                             9828.0                          [0m[0m  |  [31m[1m                   121668.5                  [0m[0m  |  [31m[1m        120800.4       [0m[0m
      32     x 768   |  [31m[1m         23252.9        [0m[0m  |  [31m[1m                23189.8              [0m[0m  |  [31m[1m                             2704.8                          [0m[0m  |  [31m[1m                    60964.6                  [0m[0m  |  [31m[1m         60277.3       [0m[0m
      16     x 768   |  [31m[1m         11326.3        [0m[0m  |  [31m[1m                11608.0              [0m[0m  |  [2m[91m                              883.0                          [0m[0m  |  [31m[1m                    30766.8                  [0m[0m  |  [31m[1m         30600.7       [0m[0m
      8      x 768   |  [31m[1m          5613.1        [0m[0m  |  [31m[1m                 5635.2              [0m[0m  |  [2m[91m                              561.8                          [0m[0m  |  [31m[1m                    15057.0                  [0m[0m  |  [31m[1m         14976.3       [0m[0m
      4      x 768   |  [2m[91m          2854.7        [0m[0m  |  [2m[91m                 2827.2              [0m[0m  |  [2m[91m                              364.1                          [0m[0m  |  [2m[91m                     7743.3                  [0m[0m  |  [2m[91m          7558.6       [0m[0m
      2      x 768   |            1420.4          |                   1429.1                |                                249.7                            |                       3772.6                    |            3795.4       
      1      x 768   |  [92m[1m           734.7        [0m[0m  |  [92m[1m                  720.3              [0m[0m  |  [92m[1m                              182.0                          [0m[0m  |  [92m[1m                     1940.8                  [0m[0m  |  [92m[1m          1898.9       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        782705.7        [0m[0m  |  [31m[1m               782590.7              [0m[0m  |  [31m[1m                           364785.2                          [0m[0m  |  [31m[1m                  1976570.3                  [0m[0m  |  [31m[1m       2065934.5       [0m[0m
      512    x 768   |  [31m[1m        415446.6        [0m[0m  |  [31m[1m               391272.4              [0m[0m  |  [31m[1m                           205795.4                          [0m[0m  |  [31m[1m                   983720.1                  [0m[0m  |  [31m[1m       1040489.9       [0m[0m
      256    x 768   |  [31m[1m        195325.9        [0m[0m  |  [31m[1m               194261.9              [0m[0m  |  [31m[1m                           110186.7                          [0m[0m  |  [31m[1m                   520733.0                  [0m[0m  |  [31m[1m        489837.0       [0m[0m
      128    x 768   |  [31m[1m         96323.0        [0m[0m  |  [31m[1m                98249.4              [0m[0m  |  [31m[1m                            66166.0                          [0m[0m  |  [31m[1m                   242240.3                  [0m[0m  |  [31m[1m        242767.2       [0m[0m
      64     x 768   |  [31m[1m         48475.8        [0m[0m  |  [31m[1m                50639.4              [0m[0m  |  [31m[1m                            28546.1                          [0m[0m  |  [31m[1m                   121798.9                  [0m[0m  |  [31m[1m        120455.8       [0m[0m
      32     x 768   |  [31m[1m         24562.2        [0m[0m  |  [31m[1m                25127.5              [0m[0m  |  [31m[1m                             3172.6                          [0m[0m  |  [31m[1m                    61072.9                  [0m[0m  |  [31m[1m         61327.2       [0m[0m
      16     x 768   |  [31m[1m         12031.4        [0m[0m  |  [31m[1m                12515.9              [0m[0m  |  [31m[1m                             2656.8                          [0m[0m  |  [31m[1m                    30572.7                  [0m[0m  |  [31m[1m         30587.4       [0m[0m
      8      x 768   |  [31m[1m          6028.1        [0m[0m  |  [31m[1m                 6041.1              [0m[0m  |  [31m[1m                             1385.8                          [0m[0m  |  [31m[1m                    15451.7                  [0m[0m  |  [31m[1m         14969.3       [0m[0m
      4      x 768   |  [2m[91m          3029.5        [0m[0m  |  [2m[91m                 3009.9              [0m[0m  |  [2m[91m                              731.4                          [0m[0m  |  [2m[91m                     7574.1                  [0m[0m  |  [2m[91m          7710.0       [0m[0m
      2      x 768   |            1522.8          |                   1519.1                |                                388.6                            |                       3798.4                    |            3787.4       
      1      x 768   |  [92m[1m           819.1        [0m[0m  |  [92m[1m                  774.9              [0m[0m  |  [92m[1m                              234.8                          [0m[0m  |  [92m[1m                     1930.8                  [0m[0m  |  [92m[1m          1910.2       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 32 with compiler trace using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [92m[1m          65.9          [0m[0m  |  [34m[1m                 54.5                [0m[0m  |  [31m[1m                            3604.5                           [0m[0m  |                      114.6                      |           114.6         
      512    x 768   |  [34m[1m          66.6          [0m[0m  |  [34m[1m                 53.6                [0m[0m  |  [31m[1m                            1813.4                           [0m[0m  |  [92m[1m                     65.2                    [0m[0m  |  [92m[1m          58.5         [0m[0m
      256    x 768   |  [34m[1m          68.2          [0m[0m  |  [92m[1m                 53.0                [0m[0m  |  [31m[1m                             905.4                           [0m[0m  |                       81.1                      |            65.3         
      128    x 768   |            87.6            |                   70.0                  |  [2m[91m                             460.5                           [0m[0m  |                       80.4                      |            65.2         
      64     x 768   |            84.0            |                   68.1                  |  [2m[91m                             232.0                           [0m[0m  |                       81.5                      |            66.4         
      32     x 768   |            85.5            |                   69.1                  |  [34m[1m                             121.0                           [0m[0m  |                       81.7                      |            67.8         
      16     x 768   |            85.0            |                   69.2                  |  [34m[1m                             116.7                           [0m[0m  |                       86.7                      |            70.8         
      8      x 768   |            85.0            |                   69.9                  |  [34m[1m                             114.7                           [0m[0m  |                       88.8                      |            71.5         
      4      x 768   |            83.2            |                   67.1                  |  [92m[1m                             113.4                           [0m[0m  |                       87.6                      |            70.6         
      2      x 768   |            72.9            |  [34m[1m                 55.2                [0m[0m  |  [34m[1m                             114.9                           [0m[0m  |                       86.6                      |            71.3         
      1      x 768   |  [34m[1m          71.3          [0m[0m  |  [34m[1m                 55.6                [0m[0m  |  [34m[1m                             115.8                           [0m[0m  |                       87.0                      |            71.7         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m          79.1          [0m[0m  |                   64.1                  |  [31m[1m                            8391.6                           [0m[0m  |                      116.5                      |           116.5         
      512    x 768   |            82.2            |                   65.6                  |  [31m[1m                            4203.8                           [0m[0m  |  [34m[1m                     84.2                    [0m[0m  |  [34m[1m          68.4         [0m[0m
      256    x 768   |            82.5            |                   67.0                  |  [31m[1m                            2093.0                           [0m[0m  |  [92m[1m                     81.7                    [0m[0m  |  [92m[1m          66.3         [0m[0m
      128    x 768   |            82.4            |                   68.3                  |  [31m[1m                            1060.8                           [0m[0m  |  [92m[1m                     81.4                    [0m[0m  |  [92m[1m          66.3         [0m[0m
      64     x 768   |            83.6            |                   69.0                  |  [2m[91m                             535.7                           [0m[0m  |  [92m[1m                     82.1                    [0m[0m  |  [34m[1m          67.7         [0m[0m
      32     x 768   |            83.0            |                   69.5                  |  [2m[91m                             269.0                           [0m[0m  |  [34m[1m                     82.8                    [0m[0m  |  [92m[1m          66.3         [0m[0m
      16     x 768   |            86.6            |                   73.1                  |                               141.0                             |  [34m[1m                     86.4                    [0m[0m  |  [34m[1m          70.7         [0m[0m
      8      x 768   |            87.8            |                   71.7                  |  [34m[1m                             114.7                           [0m[0m  |  [34m[1m                     86.8                    [0m[0m  |  [34m[1m          71.0         [0m[0m
      4      x 768   |            89.2            |                   71.5                  |  [34m[1m                             114.8                           [0m[0m  |  [34m[1m                     86.0                    [0m[0m  |  [34m[1m          71.1         [0m[0m
      2      x 768   |  [92m[1m          73.2          [0m[0m  |  [34m[1m                 57.3                [0m[0m  |  [92m[1m                             113.3                           [0m[0m  |  [34m[1m                     86.5                    [0m[0m  |            72.9         
      1      x 768   |  [92m[1m          73.8          [0m[0m  |  [92m[1m                 56.5                [0m[0m  |  [34m[1m                             114.7                           [0m[0m  |  [34m[1m                     86.5                    [0m[0m  |            74.7         

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        726515.3        [0m[0m  |  [31m[1m               771771.3              [0m[0m  |  [31m[1m                           58917.2                           [0m[0m  |  [31m[1m                  1962284.0                  [0m[0m  |  [31m[1m       1954831.0       [0m[0m
      512    x 768   |  [31m[1m        366729.6        [0m[0m  |  [31m[1m               362455.8              [0m[0m  |  [31m[1m                           22451.5                           [0m[0m  |  [31m[1m                   981307.3                  [0m[0m  |  [31m[1m        978929.9       [0m[0m
      256    x 768   |  [31m[1m        182709.7        [0m[0m  |  [31m[1m               182139.2              [0m[0m  |  [31m[1m                           14236.6                           [0m[0m  |  [31m[1m                   491129.1                  [0m[0m  |  [31m[1m        496998.6       [0m[0m
      128    x 768   |  [31m[1m         92091.3        [0m[0m  |  [31m[1m                94640.3              [0m[0m  |  [31m[1m                            8000.6                           [0m[0m  |  [31m[1m                   240639.8                  [0m[0m  |  [31m[1m        243918.7       [0m[0m
      64     x 768   |  [31m[1m         45527.1        [0m[0m  |  [31m[1m                45313.3              [0m[0m  |  [31m[1m                            4223.1                           [0m[0m  |  [31m[1m                   126784.2                  [0m[0m  |  [31m[1m        122703.5       [0m[0m
      32     x 768   |  [31m[1m         24293.9        [0m[0m  |  [31m[1m                24102.1              [0m[0m  |  [31m[1m                            2168.2                           [0m[0m  |  [31m[1m                    60433.9                  [0m[0m  |  [31m[1m         62673.3       [0m[0m
      16     x 768   |  [31m[1m         11354.1        [0m[0m  |  [31m[1m                11259.8              [0m[0m  |  [31m[1m                             811.8                           [0m[0m  |  [31m[1m                    31486.0                  [0m[0m  |  [31m[1m         31424.2       [0m[0m
      8      x 768   |  [31m[1m          5799.4        [0m[0m  |  [31m[1m                 5720.6              [0m[0m  |  [2m[91m                             608.9                           [0m[0m  |  [31m[1m                    15121.8                  [0m[0m  |  [31m[1m         14978.4       [0m[0m
      4      x 768   |  [2m[91m          2896.6        [0m[0m  |  [2m[91m                 2811.2              [0m[0m  |  [2m[91m                             348.5                           [0m[0m  |  [2m[91m                     7676.6                  [0m[0m  |  [2m[91m          7921.3       [0m[0m
      2      x 768   |            1488.3          |                   1429.0                |                               220.3                             |                       3824.3                    |  [2m[91m          3813.2       [0m[0m
      1      x 768   |  [92m[1m           799.0        [0m[0m  |  [92m[1m                  723.6              [0m[0m  |  [92m[1m                             144.3                           [0m[0m  |  [92m[1m                     1949.7                  [0m[0m  |  [92m[1m          1900.2       [0m[0m

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [31m[1m        790070.8        [0m[0m  |  [31m[1m               779616.7              [0m[0m  |  [31m[1m                           83122.7                           [0m[0m  |  [31m[1m                  2018501.7                  [0m[0m  |  [31m[1m       1969918.2       [0m[0m
      512    x 768   |  [31m[1m        389191.2        [0m[0m  |  [31m[1m               388628.6              [0m[0m  |  [31m[1m                           60794.4                           [0m[0m  |  [31m[1m                   981862.9                  [0m[0m  |  [31m[1m        981267.7       [0m[0m
      256    x 768   |  [31m[1m        209716.9        [0m[0m  |  [31m[1m               195109.4              [0m[0m  |  [31m[1m                           26196.3                           [0m[0m  |  [31m[1m                   491242.2                  [0m[0m  |  [31m[1m        490959.4       [0m[0m
      128    x 768   |  [31m[1m        101134.3        [0m[0m  |  [31m[1m                96715.9              [0m[0m  |  [31m[1m                           11895.8                           [0m[0m  |  [31m[1m                   246613.1                  [0m[0m  |  [31m[1m        242291.7       [0m[0m
      64     x 768   |  [31m[1m         48567.7        [0m[0m  |  [31m[1m                50296.5              [0m[0m  |  [31m[1m                            7550.5                           [0m[0m  |  [31m[1m                   123732.2                  [0m[0m  |  [31m[1m        122423.7       [0m[0m
      32     x 768   |  [31m[1m         25737.5        [0m[0m  |  [31m[1m                26215.7              [0m[0m  |  [31m[1m                            2825.1                           [0m[0m  |  [31m[1m                    60901.5                  [0m[0m  |  [31m[1m         60599.6       [0m[0m
      16     x 768   |  [31m[1m         12053.1        [0m[0m  |  [31m[1m                12595.9              [0m[0m  |  [31m[1m                            1486.5                           [0m[0m  |  [31m[1m                    30904.7                  [0m[0m  |  [31m[1m         30595.2       [0m[0m
      8      x 768   |  [31m[1m          6105.2        [0m[0m  |  [31m[1m                 6029.8              [0m[0m  |  [2m[91m                             806.5                           [0m[0m  |  [31m[1m                    14961.4                  [0m[0m  |  [31m[1m         14946.6       [0m[0m
      4      x 768   |  [2m[91m          3085.7        [0m[0m  |  [2m[91m                 3042.3              [0m[0m  |  [2m[91m                             426.8                           [0m[0m  |  [2m[91m                     8052.1                  [0m[0m  |  [2m[91m          7611.3       [0m[0m
      2      x 768   |            1593.3          |                   1508.4                |                               254.5                             |                       3838.4                    |  [2m[91m          3884.3       [0m[0m
      1      x 768   |  [92m[1m           852.8        [0m[0m  |  [92m[1m                  779.2              [0m[0m  |  [92m[1m                             181.9                           [0m[0m  |  [92m[1m                     1978.9                  [0m[0m  |  [92m[1m          1904.3       [0m[0m

Times are in microseconds (us).

Benchmarking batch size 1024 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 90 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 1024 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 512 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 256 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 128 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 64 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 32 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 16 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 8 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 4 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 2 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
Benchmarking batch size 1 with sparsity 80 and num_threads 32 with compiler inductor using backend inductor
[------------------------------------------------------------------------------------------------ Condensed Linear @ 90 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 90  |  Structured sparsity @ 90 - eager mode  |  Fine-grained + structured sparsity @ 90 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [92m[1m         104.1          [0m[0m  |                   54.8                  |  [31m[1m                            1764.1                           [0m[0m  |                      114.4                      |  [2m[91m         115.1         [0m[0m
      512    x 768   |  [92m[1m         104.0          [0m[0m  |                   53.8                  |  [31m[1m                             902.4                           [0m[0m  |  [34m[1m                     91.2                    [0m[0m  |            58.5         
      256    x 768   |  [34m[1m         105.2          [0m[0m  |                   54.6                  |  [2m[91m                             458.7                           [0m[0m  |  [34m[1m                     90.2                    [0m[0m  |  [92m[1m          49.8         [0m[0m
      128    x 768   |  [34m[1m         105.6          [0m[0m  |                   54.5                  |  [2m[91m                             232.7                           [0m[0m  |  [92m[1m                     89.6                    [0m[0m  |  [34m[1m          50.5         [0m[0m
      64     x 768   |  [92m[1m         103.9          [0m[0m  |                   53.8                  |                               134.0                             |  [92m[1m                     89.3                    [0m[0m  |  [34m[1m          51.5         [0m[0m
      32     x 768   |  [34m[1m         106.2          [0m[0m  |                   55.6                  |  [92m[1m                             104.8                           [0m[0m  |  [92m[1m                     88.8                    [0m[0m  |  [34m[1m          51.4         [0m[0m
      16     x 768   |  [34m[1m         105.2          [0m[0m  |                   55.1                  |  [34m[1m                             106.5                           [0m[0m  |  [34m[1m                     93.7                    [0m[0m  |            56.1         
      8      x 768   |  [34m[1m         104.9          [0m[0m  |                   55.8                  |  [92m[1m                             105.7                           [0m[0m  |  [34m[1m                     93.2                    [0m[0m  |            55.6         
      4      x 768   |  [92m[1m         104.6          [0m[0m  |                   52.5                  |  [34m[1m                             106.0                           [0m[0m  |  [34m[1m                     92.5                    [0m[0m  |            56.1         
      2      x 768   |  [34m[1m         104.8          [0m[0m  |  [92m[1m                 40.8                [0m[0m  |  [34m[1m                             112.1                           [0m[0m  |  [34m[1m                     91.7                    [0m[0m  |            55.3         
      1      x 768   |  [92m[1m         103.6          [0m[0m  |  [34m[1m                 41.4                [0m[0m  |  [34m[1m                             112.8                           [0m[0m  |  [34m[1m                     93.3                    [0m[0m  |            55.1         

Times are in microseconds (us).

[------------------------------------------------------------------------------------------------ Condensed Linear @ 80 with 32 threads -------------------------------------------------------------------------------------------------]
                     |  Structured sparsity @ 80  |  Structured sparsity @ 80 - eager mode  |  Fine-grained + structured sparsity @ 80 with backend inductor  |  Dense benchmark - Compiled - backend inductor  |  Dense benchmark - Eager
32 threads: ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      1024   x 768   |  [34m[1m         105.8          [0m[0m  |                   49.3                  |  [31m[1m                            3576.5                           [0m[0m  |                      116.4                      |  [2m[91m         116.5         [0m[0m
      512    x 768   |  [92m[1m         103.5          [0m[0m  |                   50.8                  |  [31m[1m                            1794.9                           [0m[0m  |  [34m[1m                     90.4                    [0m[0m  |            59.2         
      256    x 768   |  [34m[1m         105.5          [0m[0m  |                   50.9                  |  [31m[1m                             903.1                           [0m[0m  |  [92m[1m                     88.1                    [0m[0m  |  [92m[1m          50.5         [0m[0m
      128    x 768   |  [34m[1m         106.2          [0m[0m  |                   52.0                  |  [2m[91m                             457.1                           [0m[0m  |  [92m[1m                     87.8                    [0m[0m  |  [92m[1m          50.6         [0m[0m
      64     x 768   |  [34m[1m         105.1          [0m[0m  |                   52.9                  |  [2m[91m                             229.8                           [0m[0m  |  [34m[1m                     89.9                    [0m[0m  |  [34m[1m          51.8         [0m[0m
      32     x 768   |  [92m[1m         104.2          [0m[0m  |                   52.3                  |                               119.2                             |  [34m[1m                     88.7                    [0m[0m  |  [34m[1m          51.2         [0m[0m
      16     x 768   |  [34m[1m         105.2          [0m[0m  |                   55.1                  |  [92m[1m                             105.8                           [0m[0m  |  [34m[1m                     93.2                    [0m[0m  |  [34m[1m          55.4         [0m[0m
      8      x 768   |  [34m[1m         105.0          [0m[0m  |                   55.5                  |  [92m[1m                             105.0                           [0m[0m  |  [34m[1m                     92.3                    [0m[0m  |  [34m[1m          55.1         [0m[0m
      4      x 768   |  [34m[1m         104.5          [0m[0m  |                   54.8                  |  [34m[1m                             109.7                           [0m[0m  |  [34m[1m                     92.1                    [0m[0m  |  [34m[1m          54.7         [0m[0m
      2      x 768   |  [34m[1m         104.7          [0m[0m  |  [34m[1m                 42.4                [0m[0m  |  [34m[1m                             114.0                           [0m[0m  |  [34m[1m                     92.0                    [0m[0m  |  [34m[1m          54.0         [0m[0m
      1      x 768   |  [92m[1m         104.1          [0m[0m  |  [92m[1m                 41.2                [0m[0m  |  [34m[1m                             112.8                           [0m[0m  |  [34m[1m                     92.2                    [0m[0m  |  [34m[1m          54.4         [0m[0m

Times are in microseconds (us).
