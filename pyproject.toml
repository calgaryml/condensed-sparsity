[tool.poetry]
name = "condensed-sparsity"
version = "0.1.0"
description = ""
authors = ["CalgaryAI Lab"]
homepage = "https://github.com/calgaryml/condensed-sparsity"
readme = "README.md"
license = "MIT"
keywords = ["sparsity", "rigl"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages= [
    {include = "condensed_sparsity", from = "src"},
    {include = "rigl_torch", from = "src"},
    {include = "micronet_challenge", from = "src"},
]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
torch={version="2.0.1+cu118", source="torch_repo"}
torchvision={version="^0.15.2+cu118", source="torch_repo"}
# torch = "2.0.1"
# torchvision = "^0.15.2"
tensorboard = "^2.10.0"
hydra-core = "^1.2.0"
python-dotenv="0.20.0"
pytorch-lightning="^1.6.5"
scipy="1.8.0"
wandb="0.12.5"
xmanager="^0.3"
gcsfs = "^2022.11.0"
# sparseprop = "^0.1.11" # Install with pip. Build script is not PEP517 compliant. 
cython = "^3.0.0"
jaxlib = {version="^0.4.16+cuda12.cudnn89", source="jax_repo"}
jax = {version="^0.4.16", extras=["cuda12_pip"]}

[[tool.poetry.source]]
name="torch_repo"
url = "https://download.pytorch.org/whl/cu118"
priority = "supplemental"

[[tool.poetry.source]]
name="jax_repo"
url = "https://storage.googleapis.com/jax-releases/jax_cuda_releases.html"
priority = "supplemental"

[tool.poetry.group.dev.dependencies]
flake8 = "3.8.4"
black = "22.6.0"
jupyter = "^1.0.0"
jupytext = "^1.14.1"
fvcore = "^0.1.5.post20221221"

[tool.poetry.group.jitbackends.dependencies]
apache-tvm= "^0.11.1"
onnx="^1.14.1"
onnxruntime="^1.15.1"

[tool.poetry.group.computecanada.dependencies]
certifi= "2022.9.14"
cffi="1.15.0" 
cfgv="3.2.0"
coverage={version="5.5", extras=["toml"]}
distlib="0.3.5"
executing="0.9.1"
frozenlist="1.3.0"
fsspec= {version="2022.11.0", extras=["http"]}
grpcio="1.47.0"
identify="2.0.0"
ipykernel="6.15.1"
ipywidgets="7.7.1"
jupyter-client="7.3.4"
jupyter-console="6.4.0"
jupyterlab-widgets="1.1.1"
kiwisolver="1.3.2"
matplotlib-inline="0.1.3"
matplotlib="3.5.2"
mccabe="0.6.1"
mdurl="0.1.1"
nbclient="0.6.6"
nbconvert="6.5.3"
nodeenv="1.5.0"
numpy="1.23.0"
oauthlib="3.2.0"
pandas="1.4.1"
plotly="5.8.2"
pre-commit="2.10.1"
prompt-toolkit="3.0.30"
psutil="5.9.1"
pycodestyle="2.6.0"
pyflakes="2.2.0"
pytest-cov="2.10.1"
pytest="7.1.2"
pyzmq="23.1.0"
seaborn="0.11.2"
sentry-sdk="1.5.0"
setuptools="63.2.0"
shortuuid="1.0.1"
torchmetrics="0.9.2"
tornado="6.1"
tqdm="4.64.0"
virtualenv="20.16.3"
wheel="0.37.0"
widgetsnbextension="3.6.1"
yarl="1.7.2"

# needs pypi index
setproctitle="1.3.2"
# Compute Canada wheels only support up to ~4.9, poetry 1.2.0 requires >= 4.10.0
jsonschema="4.11.0"


[tool.poetry.scripts]
train_rigl = "train_rigl:main"

[tool.poetry.urls]
"Issues" = "https://github.com/calgaryml/condensed-sparsity/issues"
"Repo" = "https://github.com/calgaryml/condensed-sparsity/"


[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 80
exclude ='''
/(

    examples/utils.py
    | examples/main.py
    | examples/models.py
    | wandb/*
    | .venv/*
)
'''

[tool.pytest.ini_options]
pythonpath = [
    ".", "./src", "./tests"
]
# addopts = "--cov src --cov-report html --cov-branch --import-mode importlib"
addopts = "--import-mode importlib"
markers = [
    "integration",
    "slow",
    "dist",
]
norecursedirs = "tests/utils"
testpaths = "tests"
