Traceback (most recent call last):
  File "/home/user/condensed-sparsity/./scripts/benchmarks_v2.py", line 393, in <module>
    mod = get_mod(run_id, device)
  File "/home/user/condensed-sparsity/./scripts/benchmarks_v2.py", line 348, in get_mod
    checkpoint = Checkpoint.load_best_checkpoint(checkpoint_dir=checkpoint_dir)
  File "/home/user/condensed-sparsity/src/rigl_torch/utils/checkpoint.py", line 111, in load_best_checkpoint
    return cls._load_checkpoint(
  File "/home/user/condensed-sparsity/src/rigl_torch/utils/checkpoint.py", line 146, in _load_checkpoint
    state = torch.load(checkpoint_path, map_location=map_location)
  File "/home/user/build/.venv/lib/python3.10/site-packages/torch/serialization.py", line 809, in load
    return _load(opened_zipfile, map_location, pickle_module, **pickle_load_args)
  File "/home/user/build/.venv/lib/python3.10/site-packages/torch/serialization.py", line 1172, in _load
    result = unpickler.load()
  File "/home/user/build/.venv/lib/python3.10/site-packages/torch/serialization.py", line 1142, in persistent_load
    typed_storage = load_tensor(dtype, nbytes, key, _maybe_decode_ascii(location))
  File "/home/user/build/.venv/lib/python3.10/site-packages/torch/serialization.py", line 1116, in load_tensor
    wrap_storage=restore_location(storage, location),
  File "/home/user/build/.venv/lib/python3.10/site-packages/torch/serialization.py", line 1083, in restore_location
    return default_restore_location(storage, map_location)
  File "/home/user/build/.venv/lib/python3.10/site-packages/torch/serialization.py", line 217, in default_restore_location
    result = fn(storage, location)
  File "/home/user/build/.venv/lib/python3.10/site-packages/torch/serialization.py", line 187, in _cuda_deserialize
    return obj.cuda(device)
  File "/home/user/build/.venv/lib/python3.10/site-packages/torch/_utils.py", line 81, in _cuda
    untyped_storage = torch.UntypedStorage(
RuntimeError: CUDA error: out of memory
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.
